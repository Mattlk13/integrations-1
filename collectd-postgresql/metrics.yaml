pg_blks.heap_hit:
  brief: Number of buffer hits
  description: This metric shows how many read operations were served from the buffer
    in memory, so that a disk read was not necessary. This only includes hits in the
    PostgreSQL buffer cache, not the operating system's file system cache.
  metric_type: gauge
  title: Buffer hits

pg_blks.heap_read:
  brief: Number of disk blocks read
  description: This metric shows how many disk blocks have been read.
  metric_type: gauge
  title: Disk blocks read

pg_blks.idx_hit:
  brief: Number of index buffer hits
  description: This metric shows many index access operations have been served from
    the buffer in memory.
  metric_type: gauge
  title: Index buffer hits

pg_blks.idx_read:
  brief: Number of index blocks read
  description: This metric shows how many disk blocks have been read by index access
    operations.
  metric_type: gauge
  title: Index blocks read

pg_blks.tidx_hit:
  brief: Number of TOAST index buffer hits
  description: This metric shows how many index access operations on TOAST tables
    have been served from the buffer in memory accessing the actual tables.
  metric_type: gauge
  title: TOAST index buffer hits

pg_blks.tidx_read:
  brief: Number of TOAST index blocks read
  description: This metric shows how many disk blocks have been read by index access
    operations on TOAST tables.
  metric_type: gauge
  title: TOAST index blocks read

pg_blks.toast_hit:
  brief: Number of TOAST buffer hits
  description: This metric shows how many TOAST table reads have been served from
    buffer in memory.
  metric_type: gauge
  title: TOAST buffer hits

pg_blks.toast_read:
  brief: Number of disk blocks read
  description: This metric shows how many disk blocks have been read on TOAST tables.
  metric_type: gauge
  title: TOAST disk blocks read

pg_db_size:
  brief: Size of the database on disk, in bytes
  description: This metric shows the size of the database on disk, in bytes.
  metric_type: gauge
  title: Database Size

pg_n_tup_c.del:
  brief: Number of delete operations
  description: This metric shows how many delete operations have been performed.
  metric_type: gauge
  title: Deletes

pg_n_tup_c.hot_upd:
  brief: Number of update operations not requiring index update
  description: This metric shows how many update operations have been performed without
    requiring an index update.
  metric_type: gauge
  title: HOT Updates

pg_n_tup_c.ins:
  brief: Number of insert operations
  description: This metric shows how many insert operations are performed.
  metric_type: gauge
  title: Inserts

pg_n_tup_c.upd:
  brief: Number of update operations
  description: This metric shows how many update operations are performed.
  metric_type: gauge
  title: Updates

pg_n_tup_g.dead:
  brief: Number of dead rows in the database
  description: This metric shows how many dead rows in the database. Rows that are
    deleted or obsoleted by an update are not physically removed from their table;
    they remain present as dead rows until a VACUUM is done.
  metric_type: gauge
  title: Dead rows

pg_n_tup_g.live:
  brief: Number of live rows in the database
  description: This metric shows the number of live rows in the database.
  metric_type: gauge
  title: Live rows

pg_numbackends:
  brief: Number of server processes
  description: This metric shows how many server processes this database is using.
  metric_type: gauge
  title: Processes

pg_scan.idx:
  brief: Number of index scans
  description: This metric shows how many index scans have been performed across all
    the tables.
  metric_type: gauge
  title: Index Scans

pg_scan.idx_tup_fetch:
  brief: Number of rows read from index scans
  description: This metric shows how many rows have been read by index scans across
    all tables.
  metric_type: gauge
  title: Index Scans Rows Read

pg_scan.seq:
  brief: Number of sequential scans
  description: This metric shows how many sequential scans have been performed across
    all the tables. This is generally referred to as table scan. It is usually the
    least optimized approach for randomly accessing data in the database tables.
  metric_type: gauge
  title: Sequential Scans

pg_scan.seq_tup_read:
  brief: Number of rows read from sequential scans
  description: This metric shows how many rows are read from sequential scans across
    all the tables. Sequential scans, sometimes referred to as table scans, are the
    least optimized approach of accessing the data.
  metric_type: gauge
  title: Sequential Scan Rows Read

pg_xact.commit:
  brief: Number of commits
  description: This metric shows how many commits have been processed by the database.
    This usually represents the number of transactions performed by the database.
  metric_type: gauge
  title: Commits

pg_xact.num_deadlocks:
  brief: Number of deadlocks detected by the database
  description: This metric shows how many deadlocks have been detected by the database.
    Deadlocks are caused by two or more competing actions that are unable to finish
    because each is waiting for the other's lock or resources.
  metric_type: gauge
  title: Deadlocks

pg_xact.rollback:
  brief: Number of rollbacks
  description: This metric shows how many rollbacks have happened in the database.
    This could be caused by transactional failure, errors in statements or data validations.
  metric_type: gauge
  title: Rollbacks

