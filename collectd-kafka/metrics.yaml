counter.kafka-all-bytes-in:
  brief: Number of bytes received per second across all topics
  description: '> Number of bytes received per second across all topics.

    Use this metric to find out how many bytes each Kafka broker is receiving.

    The more bytes a broker receives, the more work it has to do to flush them to
    its logs.

    If the value of this metric on one server differs significantly from other servers:

    * Kafka partitions are not balanced properly across brokers. Check gauge.kafka-log-flush-time-ms-p95
    to see if log latency is particularly high on the brokers processing more bytes.

    * If the partitions are balanced across messages, some of the topics might have
    bigger messages than the others.'
  metric_type: cumulative
  title: Bytes in

counter.kafka-all-bytes-out:
  brief: Number of bytes transmitted per second across all topics
  description: '> Number of bytes transmitted per second across all topics.

    Use this metric to find out how many bytes each Kafka broker is transmitting.

    Bytes are transmitted to both consumers and to replicas.

    This metric usually increases when:

    * New Kafka instances have come online and partitions are being synced to them.

    * New consumers have come online and are requesting more data.'
  metric_type: cumulative
  title: Bytes out

counter.kafka-isr-expands:
  brief: Increase in ISR of partitions
  description: When a broker is brought up after a failure, it starts catching up
    by reading from the leader. Once it is caught up, it gets added back to the ISR
    (in-sync-replicas).
  metric_type: counter
  title: kafka-isr-expands

counter.kafka-isr-shrinks:
  brief: Decrease in ISR of partitions
  description: When a broker goes down, ISR (in-sync-replicas) for some of partitions
    will shrink. When that broker is up again, ISR will be expanded once the replicas
    are fully caught up. Other than that, the expected value for both ISR shrink rate
    and expansion rate is 0.
  metric_type: counter
  title: kafka-isr-shrinks

counter.kafka-leader-election-rate:
  brief: Number of leader elections
  description: Number of leader elections. Non-zero when there are Broker failures.
  metric_type: counter
  title: kafka-leader-election-rate

counter.kafka-log-flushes:
  brief: Number of log flushes per second
  description: '> Number of log flushes per second across all partitions on the broker.

    Each kafka partition has a log associated with it. Use this metric to find out
    how many times logs are flushed per second.'
  metric_type: cumulative
  title: Log flushes

counter.kafka-messages-in:
  brief: Number of messages received per second across all topics
  description: '> Number of messages received per second across all topics.

    Use this metric to find out how many messages each Kafka broker is receiving.

    If the value of this metric on one broker differs significantly from other brokers:

    * This broker may have a disproportionately high number of Kafka topic partitions.
    Check gauge.kafka-log-flush-time-ms-p95 to see if log latency is particularly
    high on the brokers getting more messages.

    * Some topics or partitions might be receiving more traffic than others. Consider
    rebalancing the partitions across brokers so that all brokers have similar levels
    of log flush latency and CPU utilization.'
  metric_type: cumulative
  title: Messages in

counter.kafka-unclean-elections:
  brief: Number of unclean leader elections
  description: Number of unclean leader elections. This happens when a leader goes
    down and an out-of-sync replica is chosen to be the leader.
  metric_type: counter
  title: kafka-unclean-elections

counter.kafka.fetch-consumer.total-time.count:
  brief: Number of fetch requests from consumers per second across all partitions
  description: '> Number of fetch requests from consumers per second.

    Use this value to check how many fetch requests per second each Kafka broker is
    receiving from consumers.'
  metric_type: cumulative
  title: Number of fetch requests from consumers per second

counter.kafka.fetch-follower.total-time.count:
  brief: Number of fetch requests from followers per second across all partitions
  description: '> Number of fetch requests from followers per second.

    Use this value to check how many fetch requests per second each Kafka broker is
    receiving from followers.'
  metric_type: cumulative
  title: Number of fetch requests from followers per second

counter.kafka.produce.total-time.99th:
  brief: 99th percentile of time in milliseconds to process produce requests
  description: '> 99th percentile of time in milliseconds to process produce requests
    from all producers to a broker.'
  metric_type: gauge
  title: Produce request time 99th percentile

counter.kafka.produce.total-time.count:
  brief: Number of producer requests
  description: '> Number of producer requests across all partitions on a particular
    broker.'
  metric_type: cumulative
  title: Producer request count

counter.kafka.produce.total-time.median:
  brief: Median time it takes to process a produce request
  description: '> Median time it takes to process a produce request from all producers
    to that broker.

    Use this value to check how long it takes to process produce reequests across
    all partitions.'
  metric_type: gauge
  title: Produce request time median

gauge.kafka-active-controllers:
  brief: Specifies if the broker an active controller
  description: '> Set to 1 if the broker is an active controller, 0 otherwise.

    For each independent Kafka cluster there should be a single broker which is the
    active controller at any time.

    The sum of this metric across all brokers in any given cluster should be one.'
  metric_type: gauge
  title: Active controllers

gauge.kafka-log-flush-time-ms-p95:
  brief: 95th percentile of log flush time in milliseconds
  description: '> 95th percentile of log flush time in milliseconds across all partitions
    on the broker.

    Each Kafka partition has a log associated with it. Use this metric to find out
    how much time a log flush takes in 95% of cases.

    If the value of this metric on one broker is higher than the others

    * Check if this broker is getting more traffic (messages or bytes) than other
    brokers.

    * If this broker is receiving a balanced amount of traffic, then the disks on
    that machine might have degraded. Check disk performance metrics on the broker
    and consider replacing it.'
  metric_type: gauge
  title: Log flush time ms 95

gauge.kafka-log-flush-time-ms:
  brief: Average number of milliseconds to flush a log
  description: '> Average number of milliseconds to flush logs across all partitions
    on the broker.

    Each Kafka partition has a log associated with it. Use this metric to find out
    the average time a log flush takes.

    If the value of this metric on one broker is higher than the others

    * Check if this broker is getting more traffic (messages or bytes) than other
    brokers.

    * If this broker is receiving a balanced amount of traffic, then the disks on
    that machine might have degraded. Check disk performance metrics on the broker
    and consider replacing it.'
  metric_type: gauge
  title: Log flush time ms

gauge.kafka-max-lag:
  brief: Max lag in messages between the follower and leader replicas
  description: Max lag in messages between the follower and leader replicas
  metric_type: gauge
  title: kafka-max-lag

gauge.kafka-partition-count:
  brief: Number of partitions available in the cluster
  description: Number of partitions available in the cluster
  metric_type: gauge
  title: kafka-partition-count

gauge.kafka-request-queue:
  brief: Number of requests in the request queue across all partitions on the broker
  description: "> Number of requests in the request queue across all partitions on\
    \ the broker.\nIf this number is consistently high or growing in size, then the\
    \ broker is unable to keep up with incoming requests. \n* The broker may be overloaded.\
    \ Check the CPU and memory usage on the broker to see if it does not have enough\
    \ resources.\n* Check the metric gauge.kafka-log-flush-time-ms-p95 to find out\
    \ if log flush time has increased, causing requests to take longer to process."
  metric_type: gauge
  title: Request queue size

gauge.kafka-response-queue:
  brief: Amount of time the request waits in the response queue
  description: Amount of time the request waits in the response queue
  metric_type: gauge
  title: kafka-response-queue

gauge.kafka-total-fetch-requests:
  brief: Total fetch requests per second
  description: Total fetch requests per second
  metric_type: gauge
  title: kafka-total-fetch-requests

gauge.kafka-total-produce-requests:
  brief: Total produce requests per second
  description: Total produce requests per second
  metric_type: gauge
  title: kafka-total-produce-requests

gauge.kafka-underreplicated-partitions:
  brief: Number of underreplicated partitions across all topics on the broker
  description: '> Number of partitions that are under replicated, for which this broker
    is the leader.

    Each topic has a configured number of brokers that its partitions should be replicated
    to. A non-zero value for this metric means that a broker is having trouble talking
    to other broker(s) for partition replication. This increases the risk of losing
    data that has been acknowledged as committed.'
  metric_type: gauge
  title: Number of underreplicated partitions

gauge.kafka.consumer.bytes-consumed-rate:
  brief: Average number of bytes consumed per second
  description: Average number of bytes consumed per second. This metric has either
    client-id dimension or, both client-id and topic dimensions. The former is an
    aggregate across all topics of the latter.
  metric_type: gauge
  title: bytes-consumed-rate

gauge.kafka.consumer.fetch-rate:
  brief: Number of records consumed per second
  description: Number of records consumed per second across all topics.
  metric_type: gauge
  title: fetch-rate

gauge.kafka.consumer.fetch-size-avg:
  brief: Average number of bytes fetched per request
  description: Average number of bytes fetched per request. This metric has either
    client-id dimension or, both client-id and topic dimensions. The former is an
    aggregate across all topics of the latter.
  metric_type: gauge
  title: fetch-size-avg

gauge.kafka.consumer.records-consumed-rate:
  brief: Average number of records consumed per second
  description: Average number of records consumed per second. This metric has either
    client-id dimension or, both client-id and topic dimensions. The former is an
    aggregate across all topics of the latter.
  metric_type: gauge
  title: records-consumed-rate

gauge.kafka.consumer.records-lag-max:
  brief: Consumer lag in number of records
  description: Maximum lag in of records for any partition in this window. An increasing
    value over time is your best indication that the consumer group is not keeping
    up with the producers.
  metric_type: gauge
  title: records-lag-max

gauge.kafka.fetch-consumer.total-time.99th:
  brief: 99th percentile of time in milliseconds to process fetch requests from consumers
  description: '> 99th percentile of time in milliseconds it takes to process fetch
    requests from consumers.'
  metric_type: gauge
  title: Fetch consumer time 99th percentile

gauge.kafka.fetch-consumer.total-time.median:
  brief: Median time it takes to process a fetch request from consumers
  description: '> Median time it takes to process a fetch request from consumers.'
  metric_type: gauge
  title: Fetch consumer time median

gauge.kafka.fetch-follower.total-time.99th:
  brief: 99th percentile of time in milliseconds to process fetch requests from followers
  description: '> 99th percentile of time in milliseconds to process fetch requests
    from followers.'
  metric_type: gauge
  title: Fetch follower time 99th percentile

gauge.kafka.fetch-follower.total-time.median:
  brief: Median time it takes to process a fetch request from follower
  description: '> Median time it takes to process a fetch request from followers.'
  metric_type: gauge
  title: Fetch follower time median

gauge.kafka.producer.byte-rate:
  brief: Byte rate per topic
  description: Average number of bytes sent per second for a topic. This metric has
    client-id and topic dimensions.
  metric_type: gauge
  title: byte-rate

gauge.kafka.producer.compression-rate:
  brief: Compression rate per topic
  description: Average compression rate of record batches for a topic. This metric
    has client-id and topic dimensions.
  metric_type: gauge
  title: compression-rate

gauge.kafka.producer.io-wait-time-ns-avg:
  brief: I/O wait time in ns
  description: Average length of time the I/O thread spent waiting for a socket ready
    for reads or writes in nanoseconds. This metric has client-id dimension.
  metric_type: gauge
  title: io-wait-time-ns-avg

gauge.kafka.producer.outgoing-byte-rate:
  brief: Average outgoing bytes rate
  description: Average number of outgoing bytes sent per second to all servers. This
    metric has client-id dimension.
  metric_type: gauge
  title: outgoing-byte-rate

gauge.kafka.producer.record-error-rate:
  brief: Record sends that resulted in error per topic
  description: Average per-second number of record sends that resulted in errors for
    a topic. This metric has client-id and topic dimensions.
  metric_type: gauge
  title: record-error-rate

gauge.kafka.producer.record-retry-rate:
  brief: Record retry rate per topic
  description: Average per-second number of retried record sends for a topic. This
    metric has client-id and topic dimensions.
  metric_type: gauge
  title: record-try-rate

gauge.kafka.producer.record-send-rate:
  brief: Record send rate per topic
  description: Average number of records sent per second for a topic. This metric
    has client-id and topic dimensions.
  metric_type: gauge
  title: record-send-rate

gauge.kafka.producer.request-latency-avg:
  brief: Request latency in ms
  description: Average request latency in ms. Time it takes on average for the producer
    to get. This metric is related to `kafka.gauge.producer.response-rate` (the response
    rate). This metric has client-id dimension.
  metric_type: gauge
  title: request-latency-avg

gauge.kafka.producer.request-rate:
  brief: Rate of produce requests sent
  description: Average number of requests sent to Broker per second. This metric has
    client-id dimension.
  metric_type: gauge
  title: request-rate

gauge.kafka.producer.response-rate:
  brief: Rate of responses received
  description: Average number of responses received from Broker per second. This metric
    has client-id dimension.
  metric_type: gauge
  title: response-rate

gauge.kafka.zk.request-latency:
  brief: ZooKeeper client request latency
  description: ZooKeeper client request latency (available from v1.x.x)
  metric_type: gauge
  title: kafka.zk.request-latency

