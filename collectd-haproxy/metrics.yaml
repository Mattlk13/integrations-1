counter.connection_total:
  brief: Cumulative number of connections (frontend). This corresponds to HAProxy's
    "conn_tot" metric.
  description: Cumulative number of connections (frontend). This corresponds to HAProxy's
    "conn_tot" metric.
  metric_type: counter
  title: Connection Total

counter.server_selected_total:
  brief: Number of times a server was selected, either for new sessions or when re-dispatching.
    This corresponds to HAProxy's "lbtot" metric.
  description: Number of times a server was selected, either for new sessions or when
    re-dispatching. This corresponds to HAProxy's "lbtot" metric.
  metric_type: counter
  title: Server Selected Total

derive.bytes_in:
  brief: Corresponds to HAProxy's `bin` metric -  Bytes in
  description: Corresponds to HAProxy's `bin` metric -  Bytes in
  metric_type: cumulative
  title: Bytes in

derive.bytes_out:
  brief: Corresponds to HAProxy's `bout` metric -  Bytes out
  description: Corresponds to HAProxy's `bout` metric -  Bytes out
  metric_type: cumulative
  title: Bytes out

derive.cli_abrt:
  brief: Corresponds to HAProxy's `cli_abrt` metric -  Number of data transfers aborted
    by the client
  description: Corresponds to HAProxy's `cli_abrt` metric -  Number of data transfers
    aborted by the client
  metric_type: cumulative
  title: Cli abrt

derive.comp_byp:
  brief: Corresponds to HAProxy's `comp_byp` metric -  Number of bytes that bypassed
    the HTTP compressor (CPU/BW limit)
  description: "Corresponds to HAProxy's `comp_byp` metric -  Number of bytes that\
    \ bypassed the HTTP compressor\n     (CPU/BW limit)"
  metric_type: cumulative
  title: Comp byp

derive.comp_in:
  brief: Corresponds to HAProxy's `comp_in` metric -  Number of HTTP response bytes
    fed to the compressor
  description: Corresponds to HAProxy's `comp_in` metric -  Number of HTTP response
    bytes fed to the compressor
  metric_type: cumulative
  title: Comp in

derive.comp_out:
  brief: Corresponds to HAProxy's `comp_out` metric -  Number of HTTP response bytes
    emitted by the compressor
  description: Corresponds to HAProxy's `comp_out` metric -  Number of HTTP response
    bytes emitted by the compressor
  metric_type: cumulative
  title: Comp out

derive.comp_rsp:
  brief: Corresponds to HAProxy's `comp_rsp` metric -  Number of HTTP responses that
    were compressed
  description: Corresponds to HAProxy's `comp_rsp` metric -  Number of HTTP responses
    that were compressed
  metric_type: cumulative
  title: Comp rsp

derive.compress_bps_in:
  brief: Corresponds to HAProxy's `CompressBpsIn` metric.
  description: Corresponds to HAProxy's `CompressBpsIn` metric.
  metric_type: cumulative
  title: Compress bps in

derive.compress_bps_out:
  brief: Corresponds to HAProxy's `CompressBpsOut` metric.
  description: Corresponds to HAProxy's `CompressBpsOut` metric.
  metric_type: cumulative
  title: Compress bps out

derive.connections:
  brief: Corresponds to HAProxy's `CumConns` metric. Cumulative number of connections.
  description: Corresponds to HAProxy's `CumConns` metric. Cumulative number of connections.
  metric_type: cumulative
  title: Connections

derive.denied_request:
  brief: Corresponds to HAProxy's `dreq` metric -  Requests denied because of security
    concerns. - For tcp this is because of a matched tcp-request content rule. - For
    http this is because of a matched http-request or tarpit rule.
  description: "Corresponds to HAProxy's `dreq` metric -  Requests denied because\
    \ of security concerns.\n     - For tcp this is because of a matched tcp-request\
    \ content rule.\n     - For http this is because of a matched http-request or\
    \ tarpit rule."
  metric_type: cumulative
  title: Denied request

derive.denied_response:
  brief: Corresponds to HAProxy's `dresp` metric -  Responses denied because of security
    concerns. - For http this is because of a matched http-request rule, or "option
    checkcache".
  description: "Corresponds to HAProxy's `dresp` metric -  Responses denied because\
    \ of security concerns.\n     - For http this is because of a matched http-request\
    \ rule, or\n       \"option checkcache\"."
  metric_type: cumulative
  title: Denied response

derive.downtime:
  brief: Corresponds to HAProxy's `downtime` metric -  Total downtime (in seconds).
    The value for the backend is the downtime for the whole backend, not the sum of
    the server downtime.
  description: "Corresponds to HAProxy's `downtime` metric -  Total downtime (in seconds).\
    \ The value for the backend\n     is the downtime for the whole backend, not the\
    \ sum of the server downtime."
  metric_type: cumulative
  title: Downtime

derive.error_connection:
  brief: Corresponds to HAProxy's `econ` metric -  Number of requests that encountered
    an error trying to connect to a backend server. The backend stat is the sum of
    the stat for all servers of that backend, plus any connection errors not associated
    with a particular server (such as the backend having no active servers).
  description: "Corresponds to HAProxy's `econ` metric -  Number of requests that\
    \ encountered an error trying to\n     connect to a backend server. The backend\
    \ stat is the sum of the stat\n     for all servers of that backend, plus any\
    \ connection errors not\n     associated with a particular server (such as the\
    \ backend having no\n     active servers)."
  metric_type: cumulative
  title: Error connection

derive.error_request:
  brief: Corresponds to HAProxy's `ereq` metric -  Request errors.
  description: "Corresponds to HAProxy's `ereq` metric -  Request errors. Some of\
    \ the possible causes are:\n     - early termination from the client, before the\
    \ request has been sent.\n     - read error from the client\n     - client timeout\n\
    \     - client closed connection\n     - various bad requests from the client.\n\
    \     - request was tarpitted."
  metric_type: cumulative
  title: Error request

derive.error_response:
  brief: Corresponds to HAProxy's `eresp` metric -  Response errors. srv_abrt will
    be counted here also. Responses denied because of security concerns.
  description: "Corresponds to HAProxy's `eresp` metric -  Response errors. srv_abrt\
    \ will be counted here also.\n     Some other errors are:\n     - write error\
    \ on the client socket (won't be counted for the server stat)\n     - failure\
    \ applying filters to the response."
  metric_type: cumulative
  title: Error response

derive.failed_checks:
  brief: Corresponds to HAProxy's `chkfail` metric -  Number of failed checks. (Only
    counts checks failed when the server is up.)
  description: "Corresponds to HAProxy's `chkfail` metric -  Number of failed checks.\
    \ (Only counts checks failed when\n     the server is up.)"
  metric_type: cumulative
  title: Failed checks

derive.redispatched:
  brief: Corresponds to HAProxy's `wredis` metric -  Number of times a request was
    redispatched to another server. The server value counts the number of times that
    server was switched away from.
  description: "Corresponds to HAProxy's `wredis` metric -  Number of times a request\
    \ was redispatched to another\n     server. The server value counts the number\
    \ of times that server was\n     switched away from."
  metric_type: cumulative
  title: Redispatched

derive.request_total:
  brief: Corresponds to HAProxy's `req_tot` metric -  Total number of HTTP requests
    received
  description: Corresponds to HAProxy's `req_tot` metric -  Total number of HTTP requests
    received
  metric_type: cumulative
  title: Request Total

derive.requests:
  brief: Corresponds to HAProxy's `CumReq` metric.
  description: Corresponds to HAProxy's `CumReq` metric.
  metric_type: cumulative
  title: Requests

derive.response_1xx:
  brief: Corresponds to HAProxy's `hrsp_1xx` metric -  Http responses with 1xx code
  description: Corresponds to HAProxy's `hrsp_1xx` metric -  Http responses with 1xx
    code
  metric_type: cumulative
  title: Response 1xx

derive.response_2xx:
  brief: Corresponds to HAProxy's `hrsp_2xx` metric -  Http responses with 2xx code
  description: Corresponds to HAProxy's `hrsp_2xx` metric -  Http responses with 2xx
    code
  metric_type: cumulative
  title: Response 2xx

derive.response_3xx:
  brief: Corresponds to HAProxy's `hrsp_3xx` metric -  Http responses with 3xx code
  description: Corresponds to HAProxy's `hrsp_3xx` metric -  Http responses with 3xx
    code
  metric_type: cumulative
  title: Response 3xx

derive.response_4xx:
  brief: Corresponds to HAProxy's `hrsp_4xx` metric -  Http responses with 4xx code
  description: Corresponds to HAProxy's `hrsp_4xx` metric -  Http responses with 4xx
    code
  metric_type: cumulative
  title: Response 4xx

derive.response_5xx:
  brief: Corresponds to HAProxy's `hrsp_5xx` metric -  Http responses with 5xx code
  description: Corresponds to HAProxy's `hrsp_5xx` metric -  Http responses with 5xx
    code
  metric_type: cumulative
  title: Response 5xx

derive.response_other:
  brief: Corresponds to HAProxy's `hrsp_other` metric -  Http responses with other
    codes (protocol error)
  description: Corresponds to HAProxy's `hrsp_other` metric -  Http responses with
    other codes (protocol error)
  metric_type: cumulative
  title: Response other

derive.retries:
  brief: Corresponds to HAProxy's `wretr` metric -  Number of times a connection to
    a server was retried.
  description: Corresponds to HAProxy's `wretr` metric -  Number of times a connection
    to a server was retried.
  metric_type: cumulative
  title: Retries

derive.session_total:
  brief: Corresponds to HAProxy's `stot` metric -  Cumulative number of connections
  description: Corresponds to HAProxy's `stot` metric -  Cumulative number of connections
  metric_type: cumulative
  title: Session total

derive.srv_abrt:
  brief: Corresponds to HAProxy's `srv_abrt` metric -  Number of data transfers aborted
    by the server (inc. in eresp)
  description: "Corresponds to HAProxy's `srv_abrt` metric -  Number of data transfers\
    \ aborted by the server\n     (inc. in eresp)"
  metric_type: cumulative
  title: Srv abrt

derive.ssl_cache_lookups:
  brief: Corresponds to HAProxy's `SslCacheLookups` metric.
  description: Corresponds to HAProxy's `SslCacheLookups` metric.
  metric_type: cumulative
  title: Ssl cache lookups

derive.ssl_cache_misses:
  brief: Corresponds to HAProxy's `SslCacheMisses` metric.
  description: Corresponds to HAProxy's `SslCacheMisses` metric.
  metric_type: cumulative
  title: Ssl cache misses

derive.ssl_connections:
  brief: Corresponds to HAProxy's `CumSslConns` metric.
  description: Corresponds to HAProxy's `CumSslConns` metric.
  metric_type: cumulative
  title: Ssl connections

derive.uptime_seconds:
  brief: Corresponds to HAProxy's `Uptime_sec` metric.
  description: Corresponds to HAProxy's `Uptime_sec` metric.
  metric_type: cumulative
  title: Uptime seconds

gauge.active_servers:
  brief: Number of active servers. This corresponds to HAProxy's "act" metric.
  description: Number of active servers. This corresponds to HAProxy's "act" metric.
  metric_type: gauge
  title: Active Servers

gauge.backup_servers:
  brief: Number of backup servers. This corresponds to HAProxy's "bck" metric.
  description: Number of backup servers. This corresponds to HAProxy's "bck" metric.
  metric_type: gauge
  title: Backup Servers

gauge.check_duration:
  brief: Time in ms took to finish to last health check. This corresponds to HAProxy's
    "check_duration" metric.
  description: Time in ms took to finish to last health check. This corresponds to
    HAProxy's "check_duration" metric.
  metric_type: gauge
  title: Check Duration

gauge.connection_rate:
  brief: Number of connections over the last elapsed second (frontend). This corresponds
    to HAProxy's "conn_rate" metric.
  description: Number of connections over the last elapsed second (frontend). This
    corresponds to HAProxy's "conn_rate" metric.
  metric_type: gauge
  title: Connection Rate

gauge.connection_rate_max:
  brief: Highest known connection rate. This corresponds to HAProxy's "conn_rate_max"
    metric.
  description: Highest known connection rate. This corresponds to HAProxy's "conn_rate_max"
    metric.
  metric_type: gauge
  title: Connection Rate Max

gauge.current_connections:
  brief: Current number of connections. Corresponds to HAProxy's `CurrConns` metric.
  description: Current number of connections. Corresponds to HAProxy's "CurrConns"
    metric.
  metric_type: gauge
  title: Current connections

gauge.current_ssl_connections:
  brief: Corresponds to HAProxy's `CurrSslConns` metric.
  description: Corresponds to HAProxy's `CurrSslConns` metric.
  metric_type: gauge
  title: Current ssl connections

gauge.denied_tcp_connections:
  brief: Requests denied by 'tcp-request connection' rules. This corresponds to HAProxy's
    "dcon" metric.
  description: Requests denied by 'tcp-request connection' rules. This corresponds
    to HAProxy's "dcon" metric.
  metric_type: gauge
  title: Denied TCP Connections

gauge.denied_tcp_sessions:
  brief: Requests denied by 'tcp-request session' rules. This corresponds to HAProxy's
    "dses" metric.
  description: Requests denied by 'tcp-request session' rules. This corresponds to
    HAProxy's "dses" metric.
  metric_type: gauge
  title: Denied TCP Sessions

gauge.idle_pct:
  brief: Corresponds to HAProxy's "Idle_pct" metric. Ratio of system polling time
    versus total time.
  description: Corresponds to HAProxy's "Idle_pct" metric. Ratio of system polling
    time versus total time.
  metric_type: gauge
  title: Idle pct

gauge.intercepted_requests:
  brief: Cumulative number of intercepted requests, corresponds to HAProxys metric
    'intercepted'
  description: Cumulative number of intercepted requests, corresponds to HAProxys
    metric 'intercepted'
  metric_type: gauge
  title: Intercepted Requests

gauge.last_session:
  brief: Number of seconds since last session was assigned to server/backend. This
    corresponds to HAProxy's "lastsess" metric.
  description: Number of seconds since last session was assigned to server/backend.
    This corresponds to HAProxy's "lastsess" metric.
  metric_type: gauge
  title: Last Session

gauge.max_connection_rate:
  brief: Corresponds to HAProxy's `MaxConnRate` metric.
  description: Corresponds to HAProxy's `MaxConnRate` metric.
  metric_type: gauge
  title: Max connection rate

gauge.max_connections:
  brief: Corresponds to HAProxy's `MaxConn` metric.
  description: Corresponds to HAProxy's `MaxConn` metric.
  metric_type: gauge
  title: Max connections

gauge.max_pipes:
  brief: Corresponds to HAProxy's `MaxPipes` metric.
  description: Corresponds to HAProxy's `MaxPipes` metric.
  metric_type: gauge
  title: Max pipes

gauge.max_session_rate:
  brief: Corresponds to HAProxy's `MaxSessRate` metric.
  description: Corresponds to HAProxy's `MaxSessRate` metric.
  metric_type: gauge
  title: Max session rate

gauge.max_ssl_connections:
  brief: Corresponds to HAProxy's `MaxSslConns` metric.
  description: Corresponds to HAProxy's `MaxSslConns` metric.
  metric_type: gauge
  title: Max ssl connections

gauge.pipes_free:
  brief: Corresponds to HAProxy's `PipesFree` metric.
  description: Corresponds to HAProxy's `PipesFree` metric.
  metric_type: gauge
  title: Pipes free

gauge.pipes_used:
  brief: Corresponds to HAProxy's `PipesUsed` metric.
  description: Corresponds to HAProxy's `PipesUsed` metric.
  metric_type: gauge
  title: Pipes used

gauge.queue_current:
  brief: Corresponds to HAProxy's `qcur` metric -  Current queued requests. For the
    backend this reports the number queued without a server assigned.
  description: "Corresponds to HAProxy's `qcur` metric -  Current queued requests.\
    \ For the backend this reports the\n     number queued without a server assigned."
  metric_type: gauge
  title: Queue current

gauge.queue_limit:
  brief: Configured max queue for the server, 0 being no limit. Corresponds to HAProxy's
    "qlimit" metric.
  description: Configured max queue for the server, 0 being no limit. Corresponds
    to HAProxy's "qlimit" metric.
  metric_type: gauge
  title: Queue Limit

gauge.queue_max:
  brief: Max number of queued requests, queue_current, corresponds to HAProxy's 'qmax'
    metric.
  description: Max number of queued requests, queue_current, corresponds to HAProxy's
    'qmax' metric.
  metric_type: gauge
  title: Queue Max

gauge.request_rate:
  brief: Corresponds to HAProxy's `req_rate` metric -  HTTP requests per second over
    last elapsed second
  description: Corresponds to HAProxy's `req_rate` metric -  HTTP requests per second
    over last elapsed second
  metric_type: gauge
  title: Request rate

gauge.request_rate_max:
  brief: Max number of HTTP requests per second observed. Corresponds to HAProxy's
    "req_rate_max" metric.
  description: Max number of HTTP requests per second observed. Corresponds to HAProxy's
    "req_rate_max" metric.
  metric_type: gauge
  title: Request Rate Max

gauge.run_queue:
  brief: Corresponds to HAProxy's `Run_queue` metric.
  description: Corresponds to HAProxy's `Run_queue` metric.
  metric_type: gauge
  title: Run queue

gauge.session_current:
  brief: Corresponds to HAProxy's `scur` metric -  Current sessions
  description: Corresponds to HAProxy's `scur` metric -  Current sessions
  metric_type: gauge
  title: Session current

gauge.session_rate:
  brief: Corresponds to HAProxy's `rate` metric -  Number of sessions per second over
    last elapsed second
  description: Corresponds to HAProxy's `rate` metric -  Number of sessions per second
    over last elapsed second
  metric_type: gauge
  title: Session rate

gauge.session_rate_limit:
  brief: Configured limit on number of new sessions per second. Corresponds to HAProxy's
    "rate_lim" metric.
  description: Configured limit on number of new sessions per second. Corresponds
    to HAProxy's "rate_lim" metric.
  metric_type: gauge
  title: Session Rate Limit

gauge.session_rate_max:
  brief: Max number of new sessions per second
  description: Max number of new sessions per second
  metric_type: gauge
  title: Session Rate Max

gauge.session_time_average:
  brief: Average total session time in ms over the last 1024 requests. Corresponds
    to HAProxy's "ttime" metric.
  description: Average total session time in ms over the last 1024 requests. Corresponds
    to HAProxy's "ttime" metric.
  metric_type: gauge
  title: Session Time Average

gauge.ssl_backend_key_rate:
  brief: Corresponds to HAProxy's `SslBackendKeyRate` metric.
  description: Corresponds to HAProxy's `SslBackendKeyRate` metric.
  metric_type: gauge
  title: Ssl backend key rate

gauge.ssl_frontend_key_rate:
  brief: Corresponds to HAProxy's `SslFrontendKeyRate` metric.
  description: Corresponds to HAProxy's `SslFrontendKeyRate` metric.
  metric_type: gauge
  title: Ssl frontend key rate

gauge.ssl_rate:
  brief: Corresponds to HAProxy's `SslRate` metric.
  description: Corresponds to HAProxy's `SslRate` metric.
  metric_type: gauge
  title: Ssl rate

gauge.tasks:
  brief: Corresponds to HAProxy's `Tasks` metric.
  description: Corresponds to HAProxy's `Tasks` metric.
  metric_type: gauge
  title: Tasks

gauge.throttle:
  brief: Corresponds to HAProxy's `throttle` metric -  Current throttle percentage
    for the server, when slowstart is active, or no value if not in slowstart.
  description: "Corresponds to HAProxy's `throttle` metric -  Current throttle percentage\
    \ for the server, when\n     slowstart is active, or no value if not in slowstart."
  metric_type: gauge
  title: Throttle

gauge.zlib_mem_usage:
  brief: Corresponds to HAProxy's `ZlibMemUsage` metric.
  description: Corresponds to HAProxy's `ZlibMemUsage` metric.
  metric_type: gauge
  title: Zlib mem usage

