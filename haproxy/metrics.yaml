# This file was generated in the Smart Agent repo and copied here, DO NOT EDIT HERE.
counter.connection_total:
  brief: Cumulative number of connections (frontend)
  custom: true
  description: Cumulative number of connections (frontend). This corresponds to HAProxy's
    "conn_tot" metric.
  metric_type: counter
  title: counter.connection_total

counter.server_selected_total:
  brief: Number of times a server was selected, either for new sessions or when re-dispatching
  custom: false
  description: Number of times a server was selected, either for new sessions or when
    re-dispatching. This corresponds to HAProxy's "lbtot" metric.
  metric_type: counter
  title: counter.server_selected_total

derive.bytes_in:
  brief: Corresponds to HAProxy's `bin` metric -  Bytes in
  custom: false
  description: Corresponds to HAProxy's `bin` metric -  Bytes in
  metric_type: cumulative
  title: derive.bytes_in

derive.bytes_out:
  brief: Corresponds to HAProxy's `bout` metric -  Bytes out
  custom: false
  description: Corresponds to HAProxy's `bout` metric -  Bytes out
  metric_type: cumulative
  title: derive.bytes_out

derive.cli_abrt:
  brief: Corresponds to HAProxy's `cli_abrt` metric -  Number of data transfers aborted
    by the client
  custom: true
  description: Corresponds to HAProxy's `cli_abrt` metric -  Number of data transfers
    aborted by the client
  metric_type: cumulative
  title: derive.cli_abrt

derive.comp_byp:
  brief: Corresponds to HAProxy's `comp_byp` metric -  Number of bytes that bypassed
    the HTTP compressor (CPU/BW limit)
  custom: true
  description: Corresponds to HAProxy's `comp_byp` metric -  Number of bytes that
    bypassed the HTTP compressor (CPU/BW limit)
  metric_type: cumulative
  title: derive.comp_byp

derive.comp_in:
  brief: Corresponds to HAProxy's `comp_in` metric -  Number of HTTP response bytes
    fed to the compressor
  custom: true
  description: Corresponds to HAProxy's `comp_in` metric -  Number of HTTP response
    bytes fed to the compressor
  metric_type: cumulative
  title: derive.comp_in

derive.comp_out:
  brief: Corresponds to HAProxy's `comp_out` metric -  Number of HTTP response bytes
    emitted by the compressor
  custom: true
  description: Corresponds to HAProxy's `comp_out` metric -  Number of HTTP response
    bytes emitted by the compressor
  metric_type: cumulative
  title: derive.comp_out

derive.comp_rsp:
  brief: Corresponds to HAProxy's `comp_rsp` metric -  Number of HTTP responses that
    were compressed
  custom: true
  description: Corresponds to HAProxy's `comp_rsp` metric -  Number of HTTP responses
    that were compressed
  metric_type: cumulative
  title: derive.comp_rsp

derive.compress_bps_in:
  brief: Corresponds to HAProxy's `CompressBpsIn` metric
  custom: true
  description: Corresponds to HAProxy's `CompressBpsIn` metric.
  metric_type: cumulative
  title: derive.compress_bps_in

derive.compress_bps_out:
  brief: Corresponds to HAProxy's `CompressBpsOut` metric
  custom: true
  description: Corresponds to HAProxy's `CompressBpsOut` metric.
  metric_type: cumulative
  title: derive.compress_bps_out

derive.connections:
  brief: Corresponds to HAProxy's `CumConns` metric
  custom: true
  description: Corresponds to HAProxy's `CumConns` metric. Cumulative number of connections.
  metric_type: cumulative
  title: derive.connections

derive.denied_request:
  brief: Corresponds to HAProxy's `dreq` metric -  Requests denied because of security
    concerns
  custom: false
  description: Corresponds to HAProxy's `dreq` metric -  Requests denied because of
    security concerns. - For tcp this is because of a matched tcp-request content
    rule.
  metric_type: cumulative
  title: derive.denied_request

derive.denied_response:
  brief: Corresponds to HAProxy's `dresp` metric -  Responses denied because of security
    concerns
  custom: false
  description: Corresponds to HAProxy's `dresp` metric -  Responses denied because
    of security concerns. - For http this is because of a matched http-request rule,
    or
  metric_type: cumulative
  title: derive.denied_response

derive.downtime:
  brief: Corresponds to HAProxy's `downtime` metric -  Total downtime (in seconds)
  custom: true
  description: Corresponds to HAProxy's `downtime` metric -  Total downtime (in seconds).
    The value for the backend is the downtime for the whole backend, not the sum of
    the server downtime.
  metric_type: cumulative
  title: derive.downtime

derive.error_connection:
  brief: Corresponds to HAProxy's `econ` metric -  Number of requests that encountered
    an error trying to connect to a backend server
  custom: false
  description: Corresponds to HAProxy's `econ` metric -  Number of requests that encountered
    an error trying to connect to a backend server. The backend stat is the sum of
    the stat
  metric_type: cumulative
  title: derive.error_connection

derive.error_request:
  brief: Corresponds to HAProxy's `ereq` metric -  Request errors
  custom: false
  description: Corresponds to HAProxy's `ereq` metric -  Request errors.
  metric_type: cumulative
  title: derive.error_request

derive.error_response:
  brief: Corresponds to HAProxy's `eresp` metric -  Response errors
  custom: false
  description: Corresponds to HAProxy's `eresp` metric -  Response errors. srv_abrt
    will be counted here also. Responses denied because of security concerns.
  metric_type: cumulative
  title: derive.error_response

derive.failed_checks:
  brief: Corresponds to HAProxy's `chkfail` metric -  Number of failed checks
  custom: true
  description: Corresponds to HAProxy's `chkfail` metric -  Number of failed checks.
    (Only counts checks failed when the server is up.)
  metric_type: cumulative
  title: derive.failed_checks

derive.redispatched:
  brief: Corresponds to HAProxy's `wredis` metric -  Number of times a request was
    redispatched to another server
  custom: false
  description: Corresponds to HAProxy's `wredis` metric -  Number of times a request
    was redispatched to another server. The server value counts the number of times
    that server was
  metric_type: cumulative
  title: derive.redispatched

derive.request_total:
  brief: Corresponds to HAProxy's `req_tot` metric -  Total number of HTTP requests
    received
  custom: true
  description: Corresponds to HAProxy's `req_tot` metric -  Total number of HTTP requests
    received
  metric_type: cumulative
  title: derive.request_total

derive.requests:
  brief: Corresponds to HAProxy's `CumReq` metric
  custom: false
  description: Corresponds to HAProxy's `CumReq` metric.
  metric_type: cumulative
  title: derive.requests

derive.response_1xx:
  brief: Corresponds to HAProxy's `hrsp_1xx` metric -  Http responses with 1xx code
  custom: true
  description: Corresponds to HAProxy's `hrsp_1xx` metric -  Http responses with 1xx
    code
  metric_type: cumulative
  title: derive.response_1xx

derive.response_2xx:
  brief: Corresponds to HAProxy's `hrsp_2xx` metric -  Http responses with 2xx code
  custom: false
  description: Corresponds to HAProxy's `hrsp_2xx` metric -  Http responses with 2xx
    code
  metric_type: cumulative
  title: derive.response_2xx

derive.response_3xx:
  brief: Corresponds to HAProxy's `hrsp_3xx` metric -  Http responses with 3xx code
  custom: true
  description: Corresponds to HAProxy's `hrsp_3xx` metric -  Http responses with 3xx
    code
  metric_type: cumulative
  title: derive.response_3xx

derive.response_4xx:
  brief: Corresponds to HAProxy's `hrsp_4xx` metric -  Http responses with 4xx code
  custom: false
  description: Corresponds to HAProxy's `hrsp_4xx` metric -  Http responses with 4xx
    code
  metric_type: cumulative
  title: derive.response_4xx

derive.response_5xx:
  brief: Corresponds to HAProxy's `hrsp_5xx` metric -  Http responses with 5xx code
  custom: false
  description: Corresponds to HAProxy's `hrsp_5xx` metric -  Http responses with 5xx
    code
  metric_type: cumulative
  title: derive.response_5xx

derive.response_other:
  brief: Corresponds to HAProxy's `hrsp_other` metric -  Http responses with other
    codes (protocol error)
  custom: true
  description: Corresponds to HAProxy's `hrsp_other` metric -  Http responses with
    other codes (protocol error)
  metric_type: cumulative
  title: derive.response_other

derive.retries:
  brief: Corresponds to HAProxy's `wretr` metric -  Number of times a connection to
    a server was retried
  custom: false
  description: Corresponds to HAProxy's `wretr` metric -  Number of times a connection
    to a server was retried.
  metric_type: cumulative
  title: derive.retries

derive.session_total:
  brief: Corresponds to HAProxy's `stot` metric -  Cumulative number of connections
  custom: true
  description: Corresponds to HAProxy's `stot` metric -  Cumulative number of connections
  metric_type: cumulative
  title: derive.session_total

derive.srv_abrt:
  brief: Corresponds to HAProxy's `srv_abrt` metric -  Number of data transfers aborted
    by the server (inc. in eresp)
  custom: true
  description: Corresponds to HAProxy's `srv_abrt` metric -  Number of data transfers
    aborted by the server (inc. in eresp)
  metric_type: cumulative
  title: derive.srv_abrt

derive.ssl_cache_lookups:
  brief: Corresponds to HAProxy's `SslCacheLookups` metric
  custom: true
  description: Corresponds to HAProxy's `SslCacheLookups` metric.
  metric_type: cumulative
  title: derive.ssl_cache_lookups

derive.ssl_cache_misses:
  brief: Corresponds to HAProxy's `SslCacheMisses` metric
  custom: true
  description: Corresponds to HAProxy's `SslCacheMisses` metric.
  metric_type: cumulative
  title: derive.ssl_cache_misses

derive.ssl_connections:
  brief: Corresponds to HAProxy's `CumSslConns` metric
  custom: true
  description: Corresponds to HAProxy's `CumSslConns` metric.
  metric_type: cumulative
  title: derive.ssl_connections

derive.uptime_seconds:
  brief: Corresponds to HAProxy's `Uptime_sec` metric
  custom: true
  description: Corresponds to HAProxy's `Uptime_sec` metric.
  metric_type: cumulative
  title: derive.uptime_seconds

gauge.active_servers:
  brief: Number of active servers
  custom: true
  description: Number of active servers. This corresponds to HAProxy's "act" metric.
  metric_type: gauge
  title: gauge.active_servers

gauge.backup_servers:
  brief: Number of backup servers
  custom: true
  description: Number of backup servers. This corresponds to HAProxy's "bck" metric.
  metric_type: gauge
  title: gauge.backup_servers

gauge.check_duration:
  brief: Time in ms took to finish to last health check
  custom: true
  description: Time in ms took to finish to last health check. This corresponds to
    HAProxy's "check_duration" metric.
  metric_type: gauge
  title: gauge.check_duration

gauge.connection_rate:
  brief: Number of connections over the last elapsed second (frontend)
  custom: false
  description: Number of connections over the last elapsed second (frontend). This
    corresponds to HAProxy's "conn_rate" metric.
  metric_type: gauge
  title: gauge.connection_rate

gauge.connection_rate_max:
  brief: Highest known connection rate
  custom: true
  description: Highest known connection rate. This corresponds to HAProxy's "conn_rate_max"
    metric.
  metric_type: gauge
  title: gauge.connection_rate_max

gauge.current_connections:
  brief: Current number of connections
  custom: true
  description: Current number of connections. Corresponds to HAProxy's `CurrConns`
    metric.
  metric_type: gauge
  title: gauge.current_connections

gauge.current_ssl_connections:
  brief: Corresponds to HAProxy's `CurrSslConns` metric
  custom: true
  description: Corresponds to HAProxy's `CurrSslConns` metric.
  metric_type: gauge
  title: gauge.current_ssl_connections

gauge.denied_tcp_connections:
  brief: Requests denied by 'tcp-request connection' rules
  custom: true
  description: Requests denied by 'tcp-request connection' rules. This corresponds
    to HAProxy's "dcon" metric.
  metric_type: gauge
  title: gauge.denied_tcp_connections

gauge.denied_tcp_sessions:
  brief: Requests denied by 'tcp-request session' rules
  custom: true
  description: Requests denied by 'tcp-request session' rules. This corresponds to
    HAProxy's "dses" metric.
  metric_type: gauge
  title: gauge.denied_tcp_sessions

gauge.idle_pct:
  brief: Corresponds to HAProxy's "Idle_pct" metric
  custom: false
  description: Corresponds to HAProxy's "Idle_pct" metric. Ratio of system polling
    time versus total time.
  metric_type: gauge
  title: gauge.idle_pct

gauge.intercepted_requests:
  brief: Cumulative number of intercepted requests, corresponds to HAProxys metric
    'intercepted'
  custom: true
  description: Cumulative number of intercepted requests, corresponds to HAProxys
    metric 'intercepted'
  metric_type: gauge
  title: gauge.intercepted_requests

gauge.last_session:
  brief: Number of seconds since last session was assigned to server/backend
  custom: true
  description: Number of seconds since last session was assigned to server/backend.
    This corresponds to HAProxy's "lastsess" metric.
  metric_type: gauge
  title: gauge.last_session

gauge.max_connection_rate:
  brief: Corresponds to HAProxy's `MaxConnRate` metric
  custom: true
  description: Corresponds to HAProxy's `MaxConnRate` metric.
  metric_type: gauge
  title: gauge.max_connection_rate

gauge.max_connections:
  brief: Corresponds to HAProxy's `MaxConn` metric
  custom: true
  description: Corresponds to HAProxy's `MaxConn` metric.
  metric_type: gauge
  title: gauge.max_connections

gauge.max_pipes:
  brief: Corresponds to HAProxy's `MaxPipes` metric
  custom: true
  description: Corresponds to HAProxy's `MaxPipes` metric.
  metric_type: gauge
  title: gauge.max_pipes

gauge.max_session_rate:
  brief: Corresponds to HAProxy's `MaxSessRate` metric
  custom: true
  description: Corresponds to HAProxy's `MaxSessRate` metric.
  metric_type: gauge
  title: gauge.max_session_rate

gauge.max_ssl_connections:
  brief: Corresponds to HAProxy's `MaxSslConns` metric
  custom: true
  description: Corresponds to HAProxy's `MaxSslConns` metric.
  metric_type: gauge
  title: gauge.max_ssl_connections

gauge.pipes_free:
  brief: Corresponds to HAProxy's `PipesFree` metric
  custom: true
  description: Corresponds to HAProxy's `PipesFree` metric.
  metric_type: gauge
  title: gauge.pipes_free

gauge.pipes_used:
  brief: Corresponds to HAProxy's `PipesUsed` metric
  custom: true
  description: Corresponds to HAProxy's `PipesUsed` metric.
  metric_type: gauge
  title: gauge.pipes_used

gauge.queue_current:
  brief: Corresponds to HAProxy's `qcur` metric -  Current queued requests
  custom: false
  description: Corresponds to HAProxy's `qcur` metric -  Current queued requests.
    For the backend this reports the number queued without a server assigned.
  metric_type: gauge
  title: gauge.queue_current

gauge.queue_limit:
  brief: Configured max queue for the server, 0 being no limit
  custom: true
  description: Configured max queue for the server, 0 being no limit. Corresponds
    to HAProxy's "qlimit" metric.
  metric_type: gauge
  title: gauge.queue_limit

gauge.queue_max:
  brief: Max number of queued requests, queue_current, corresponds to HAProxy's 'qmax'
    metric
  custom: true
  description: Max number of queued requests, queue_current, corresponds to HAProxy's
    'qmax' metric.
  metric_type: gauge
  title: gauge.queue_max

gauge.queue_time_avg:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  title: gauge.queue_time_avg

gauge.request_rate:
  brief: Corresponds to HAProxy's `req_rate` metric -  HTTP requests per second over
    last elapsed second
  custom: false
  description: Corresponds to HAProxy's `req_rate` metric -  HTTP requests per second
    over last elapsed second
  metric_type: gauge
  title: gauge.request_rate

gauge.request_rate_max:
  brief: Max number of HTTP requests per second observed
  custom: true
  description: Max number of HTTP requests per second observed. Corresponds to HAProxy's
    "req_rate_max" metric.
  metric_type: gauge
  title: gauge.request_rate_max

gauge.response_time_avg:
  brief: Average total session time in ms over the last 1024 requests
  custom: true
  description: Average total session time in ms over the last 1024 requests. Corresponds
    to HAProxy's "ttime" metric.
  metric_type: gauge
  title: gauge.response_time_avg

gauge.run_queue:
  brief: Corresponds to HAProxy's `Run_queue` metric
  custom: true
  description: Corresponds to HAProxy's `Run_queue` metric.
  metric_type: gauge
  title: gauge.run_queue

gauge.session_current:
  brief: Corresponds to HAProxy's `scur` metric -  Current sessions
  custom: false
  description: Corresponds to HAProxy's `scur` metric -  Current sessions
  metric_type: gauge
  title: gauge.session_current

gauge.session_rate:
  brief: Corresponds to HAProxy's `rate` metric -  Number of sessions per second over
    last elapsed second
  custom: false
  description: Corresponds to HAProxy's `rate` metric -  Number of sessions per second
    over last elapsed second
  metric_type: gauge
  title: gauge.session_rate

gauge.session_rate_all:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  title: gauge.session_rate_all

gauge.session_rate_limit:
  brief: Configured limit on number of new sessions per second
  custom: true
  description: Configured limit on number of new sessions per second. Corresponds
    to HAProxy's "rate_lim" metric.
  metric_type: gauge
  title: gauge.session_rate_limit

gauge.session_rate_max:
  brief: Max number of new sessions per second
  custom: true
  description: Max number of new sessions per second
  metric_type: gauge
  title: gauge.session_rate_max

gauge.session_time_average:
  brief: Average total session time in ms over the last 1024 requests
  custom: true
  description: Average total session time in ms over the last 1024 requests. Corresponds
    to HAProxy's "ttime" metric.
  metric_type: gauge
  title: gauge.session_time_average

gauge.session_time_avg:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  title: gauge.session_time_avg

gauge.ssl_backend_key_rate:
  brief: Corresponds to HAProxy's `SslBackendKeyRate` metric
  custom: true
  description: Corresponds to HAProxy's `SslBackendKeyRate` metric.
  metric_type: gauge
  title: gauge.ssl_backend_key_rate

gauge.ssl_frontend_key_rate:
  brief: Corresponds to HAProxy's `SslFrontendKeyRate` metric
  custom: true
  description: Corresponds to HAProxy's `SslFrontendKeyRate` metric.
  metric_type: gauge
  title: gauge.ssl_frontend_key_rate

gauge.ssl_rate:
  brief: Corresponds to HAProxy's `SslRate` metric
  custom: true
  description: Corresponds to HAProxy's `SslRate` metric.
  metric_type: gauge
  title: gauge.ssl_rate

gauge.tasks:
  brief: Corresponds to HAProxy's `Tasks` metric
  custom: true
  description: Corresponds to HAProxy's `Tasks` metric.
  metric_type: gauge
  title: gauge.tasks

gauge.throttle:
  brief: Corresponds to HAProxy's `throttle` metric -  Current throttle percentage
    for the server, when slowstart is active, or no value if not in slowstart
  custom: true
  description: Corresponds to HAProxy's `throttle` metric -  Current throttle percentage
    for the server, when slowstart is active, or no value if not in slowstart.
  metric_type: gauge
  title: gauge.throttle

gauge.zlib_mem_usage:
  brief: Corresponds to HAProxy's `ZlibMemUsage` metric
  custom: true
  description: Corresponds to HAProxy's `ZlibMemUsage` metric.
  metric_type: gauge
  title: gauge.zlib_mem_usage

