blkio.io_service_bytes_recursive-major-minor.async:
  brief: Volume, in bytes, of asynchronous block I/O
  description: 'Superseded by `blkio.io_service_bytes_recursive.async`.

    Tracks the volume, in bytes, of serviced asynchronous block I/O requests in that
    container.'
  metric_type: cumulative
  title: Asynchronous block I/O volume

blkio.io_service_bytes_recursive-major-minor.read:
  brief: Volume, in bytes, of reads from block devices
  description: 'Superseded by `blkio.io_service_bytes_recursive.read`.

    Tracks the volume, in bytes, read from block devices by that container.'
  metric_type: cumulative
  title: Read volume from block devices

blkio.io_service_bytes_recursive-major-minor.sync:
  brief: Volume, in bytes, of synchronous block I/O
  description: 'Superseded by `blkio.io_service_bytes_recursive.sync`.

    Tracks the volume, in bytes, of serviced synchronous block I/O requests in that
    container.'
  metric_type: cumulative
  title: Synchronous block I/O volume

blkio.io_service_bytes_recursive-major-minor.total:
  brief: Total volume, in bytes, of all block I/O
  description: 'Superseded by `blkio.io_service_bytes_recursive.total`.

    Tracks the total volume, in bytes, of all serviced block I/O requests in that
    container.'
  metric_type: cumulative
  title: Total block I/O volume

blkio.io_service_bytes_recursive-major-minor.write:
  brief: Volume, in bytes, of writes to block devices
  description: 'Superseded by `blkio.io_service_bytes_recursive.write`.

    Tracks the volume, in bytes, written to block devices by that container.'
  metric_type: cumulative
  title: Write volume to block devices

blkio.io_service_bytes_recursive.async:
  brief: Volume, in bytes, of asynchronous block I/O
  description: 'Tracks the volume, in bytes, of serviced asynchronous block I/O requests

    in that container.

    This metric is reported with dimensions `device_major` and `device_minor` to indicate
    the major and minor device numbers respectively.'
  metric_type: cumulative
  title: Asynchronous block I/O volume

blkio.io_service_bytes_recursive.read:
  brief: Volume, in bytes, of reads from block devices
  description: 'Tracks the volume, in bytes, read from block devices by that container.

    This metric is reported with dimensions `device_major` and `device_minor` to indicate
    the major and minor device numbers respectively.'
  metric_type: cumulative
  title: Read volume from block devices

blkio.io_service_bytes_recursive.sync:
  brief: Volume, in bytes, of synchronous block I/O
  description: 'Tracks the volume, in bytes, of serviced synchronous block I/O requests

    in that container.

    This metric is reported with dimensions `device_major` and `device_minor` to indicate
    the major and minor device numbers respectively.'
  metric_type: cumulative
  title: Synchronous block I/O volume

blkio.io_service_bytes_recursive.total:
  brief: Total volume, in bytes, of all block I/O
  description: 'Tracks the total volume, in bytes, of all serviced block I/O requests
    in

    that container.

    This metric is reported with dimensions `device_major` and `device_minor` to indicate
    the major and minor device numbers respectively.'
  metric_type: cumulative
  title: Total block I/O volume

blkio.io_service_bytes_recursive.write:
  brief: Volume, in bytes, of writes to block devices
  description: 'Tracks the volume, in bytes, written to block devices by that container.

    This metric is reported with dimensions `device_major` and `device_minor` to indicate
    the major and minor device numbers respectively.'
  metric_type: cumulative
  title: Write volume to block devices

blkio.io_serviced_recursive-major-minor.async:
  brief: Number of asynchronous block I/O requests
  description: 'Superseded by `blkio.io_serviced_recursive.async`.

    Tracks the number of serviced asynchronous block I/O requests in that container.'
  metric_type: cumulative
  title: Asynchronous block I/O requests

blkio.io_serviced_recursive-major-minor.read:
  brief: Number of reads requests from block devices
  description: 'Superseded by `blkio.io_serviced_recursive.read`.

    Tracks the number of read requests from block devices serviced in that container.'
  metric_type: cumulative
  title: Read requests from block devices

blkio.io_serviced_recursive-major-minor.sync:
  brief: Number of synchronous block I/O requests
  description: 'Superseded by `blkio.io_serviced_recursive.sync`.

    Tracks the number of serviced synchronous block I/O requests in that container.'
  metric_type: cumulative
  title: Synchronous block I/O requests

blkio.io_serviced_recursive-major-minor.total:
  brief: Total number of block I/O requests
  description: 'Superseded by `blkio.io_serviced_recursive.total`.

    Tracks of the total number of block I/O requests serviced in that container.'
  metric_type: cumulative
  title: Block I/O requests

blkio.io_serviced_recursive-major-minor.write:
  brief: Number of write requests to block devices
  description: 'Superseded by `blkio.io_serviced_recursive.write`.

    Tracks the number of write requests to block devices serviced in that container.'
  metric_type: cumulative
  title: Write requests to block devices

blkio.io_serviced_recursive.async:
  brief: Number of asynchronous block I/O requests
  description: 'Tracks the number of serviced asynchronous block I/O requests in that

    container.

    This metric is reported with dimensions `device_major` and `device_minor` to indicate
    the major and minor device numbers respectively.'
  metric_type: cumulative
  title: Asynchronous block I/O requests

blkio.io_serviced_recursive.read:
  brief: Number of reads requests from block devices
  description: 'Tracks the number of read requests from block devices serviced in
    that

    container.

    This metric is reported with dimensions `device_major` and `device_minor` to indicate
    the major and minor device numbers respectively.'
  metric_type: cumulative
  title: Read requests from block devices

blkio.io_serviced_recursive.sync:
  brief: Number of synchronous block I/O requests
  description: 'Tracks the number of serviced synchronous block I/O requests in that

    container.

    This metric is reported with dimensions `device_major` and `device_minor` to indicate
    the major and minor device numbers respectively.'
  metric_type: cumulative
  title: Synchronous block I/O requests

blkio.io_serviced_recursive.total:
  brief: Total number of block I/O requests
  description: 'Tracks of the total number of block I/O requests serviced in that

    container.

    This metric is reported with dimensions `device_major` and `device_minor` to indicate
    the major and minor device numbers respectively.'
  metric_type: cumulative
  title: Block I/O requests

blkio.io_serviced_recursive.write:
  brief: Number of write requests to block devices
  description: 'Tracks the number of write requests to block devices serviced in that

    container.

    This metric is reported with dimensions `device_major` and `device_minor` to indicate
    the major and minor device numbers respectively.'
  metric_type: cumulative
  title: Write requests to block devices

cpu.percent:
  brief: Percentage of host CPU resources used by the container
  description: Tracks CPU utilization percentage relative to the container host. This
    is the same measurement given by `docker stats` in `CPU %` column.
  metric_type: gauge
  title: CPU Utilization Percent

cpu.percpu.usage.cpuX:
  brief: Jiffies of CPU time spent by the container, per CPU core
  description: 'Superseded by `cpu.percpu.usage`.

    How much CPU time is spent by the container, per CPU core. This metric is reported
    for each core as `cpu.percpu.usage.cpuX` where _X_ is the number of the core.
    For example, a two-core machine would have `cpu.percpu.usage.cpu0` and `cpu.percpu.usage.cpu1`.'
  metric_type: cumulative
  title: Per-core CPU usage

cpu.percpu.usage:
  brief: Jiffies of CPU time spent by the container, per CPU core
  description: How much CPU time is spent by the container, per CPU core. This metric
    is reported with a dimension `core` that indicates the number of the core.
  metric_type: cumulative
  title: Per-core CPU usage

cpu.throttling_data.periods:
  brief: Number of periods
  description: (Optional metric) A cumulative count of the total number of periods
    that have passed. A period is a measurement of time during which containers are
    allocated their CPU quota. If the period is set to 100,000 microseconds and a
    docker container is quoted 50,000 microseconds, then the container is allocated
    50% of 1 CPU during a period. The default period length is 100,000 microseconds
    or 100 milliseconds. Docker reports 0 if there is no quota constraint on the container.
  metric_type: cumulative
  title: Periods

cpu.throttling_data.throttled_periods:
  brief: Number of periods throttled
  description: (Optional metric) A cumulative count of the number of periods the container
    has been throttled. If the container attempts to use more than its quota, it will
    be throttled. Docker reports 0 if there is no quota constraint on the container.
  metric_type: cumulative
  title: Throttled Periods

cpu.throttling_data.throttled_time:
  brief: Throttling time in nano seconds
  description: (Optional metric) The amount of time (in nanoseconds) that a container
    is throttled. A container is throttled when it tries to use more than it's quota
    within a period. Docker reports 0 if there is no quota constraint on the container.
  metric_type: cumulative
  title: Throttling time

cpu.usage.kernelmode:
  brief: Jiffies of CPU time spent in kernel mode by the container
  description: Tracks how much CPU time, in jiffies, is spent by the container while
    executing kernel code.
  metric_type: cumulative
  title: Kernel CPU usage

cpu.usage.system:
  brief: Jiffies of CPU time used by the system
  description: Tracks how much CPU time, in jiffies, the system (Docker host) has
    used. This metric can be used to calculate the CPU usage percentage of a given
    container (see [`cpu.usage.total`](cpu.usage.total.md)).
  metric_type: cumulative
  title: System CPU usage

cpu.usage.total:
  brief: Jiffies of CPU time used by the container
  description: 'Tracks how much CPU time, in jiffies, a container has used. To get
    a CPU utilization percentage, compute against `cpu.usage.system`:

    ```

    CPU usage % = 100 * cpu.usage.total / cpu.usage.system

    ```'
  metric_type: cumulative
  title: CPU Usage Total

cpu.usage.usermode:
  brief: Jiffies of CPU time spent in user mode by the container
  description: Tracks how much CPU time, in jiffies, is spent by the container while
    executing user/application code (as opposed to kernel code).
  metric_type: cumulative
  title: User CPU usage

memory.stats.swap:
  brief: Bytes of swap memory used by container
  description: (Optional metric) The number of bytes of swap memory used by a container.
  metric_type: gauge
  title: Swap Memory Used

memory.usage.limit:
  brief: Memory usage limit of the container, in bytes
  description: Memory usage limit of the container, in bytes.
  metric_type: gauge
  title: Memory limit

memory.usage.max:
  brief: Maximum measured memory usage of the container, in bytes
  description: Maximum measured memory usage of the container, in bytes, during the
    lifetime of the container.
  metric_type: gauge
  title: Maximum memory usage

memory.usage.total:
  brief: Bytes of memory used by the container
  description: 'This metrics reports the current memory (RAM) usage of the container,
    in bytes. A memory utilization percentage can be calculated against the `memory.usage.limit`
    metric:

    ```

    Memory usage % = 100 * memory.usage.total / memory.usage.limit

    ```'
  metric_type: gauge
  title: Memory usage

network.usage.rx_bytes:
  brief: Bytes received by the container via its network interface
  description: The amount of inbound network traffic, in bytes, received by the container
    via its network interface.
  metric_type: cumulative
  title: Network bytes received

network.usage.rx_dropped:
  brief: Number of inbound network packets dropped by the container
  description: This metric tracks the number of inbound network packets dropped by
    the container on its network interface.
  metric_type: cumulative
  title: Inbound network packets dropped

network.usage.rx_errors:
  brief: Errors receiving network packets
  description: This metric tracks the number of errors encountered by the container
    while attempting to receive network packets.
  metric_type: cumulative
  title: Network reception errors

network.usage.rx_packets:
  brief: Network packets received by the container via its network interface
  description: The amount of network packets received by the container via its network
    interface.
  metric_type: cumulative
  title: Network packets received

network.usage.tx_bytes:
  brief: Bytes sent by the container via its network interface
  description: The amount of outbound network traffic, in bytes, sent by the container
    via its network interface.
  metric_type: cumulative
  title: Network bytes sent

network.usage.tx_dropped:
  brief: Number of outbound network packets dropped by the container
  description: This metric tracks the number of outbound network packets dropped by
    the container on its network interface.
  metric_type: cumulative
  title: Outbound network packets dropped

network.usage.tx_errors:
  brief: Errors sending network packets
  description: This metric tracks the number of errors encountered by the container
    while attempting to transmit network packets.
  metric_type: cumulative
  title: Network transmission errors

network.usage.tx_packets:
  brief: Network packets sent by the container via its network interface
  description: The amount of network packets sent by the container via its network
    interface.
  metric_type: cumulative
  title: Network packets sent

