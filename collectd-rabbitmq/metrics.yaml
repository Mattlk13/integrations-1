counter.channel.message_stats.ack:
  brief: The number of acknowledged messages
  description: The number of acknowledged messages
  metric_type: counter
  title: Channel message ack count

counter.channel.message_stats.confirm:
  brief: Count of messages confirmed.
  description: Count of messages confirmed.
  metric_type: counter
  title: Channel message confirm count

counter.channel.message_stats.deliver:
  brief: Count of messages delivered in acknowledgement mode to consumers.
  description: Count of messages delivered in acknowledgement mode to consumers.
  metric_type: counter
  title: Channel message deliver count

counter.channel.message_stats.deliver_get:
  brief: Count of all messages delivered on the channel
  description: Count of all messages delivered on the channel
  metric_type: counter
  title: Channel message deliver get count

counter.channel.message_stats.publish:
  brief: Count of messages published.
  description: Count of messages published.
  metric_type: counter
  title: Channel message publish count

counter.connection.channel_max:
  brief: The maximum number of channels on the connection
  description: The maximum number of channels on the connection
  metric_type: counter
  title: Connection channel count max

counter.connection.recv_cnt:
  brief: Number of packets received on the connection
  description: Number of packets received on the connection
  metric_type: counter
  title: Connection packets received count

counter.connection.recv_oct:
  brief: Number of octets received on the connection
  description: Number of octets received on the connection
  metric_type: counter
  title: Connection octets received count

counter.connection.send_cnt:
  brief: Number of packets sent by the connection
  description: Number of packets sent by the connection
  metric_type: counter
  title: Connection packets sent count

counter.connection.send_oct:
  brief: Number of octets sent by the connection
  description: Number of octets sent by the connection
  metric_type: counter
  title: Connection octets sent count

counter.exchange.message_stats.confirm:
  brief: Count of messages confirmed.
  description: Count of messages confirmed.
  metric_type: counter
  title: Exchange message confirm count

counter.exchange.message_stats.publish_in:
  brief: Count of messages published "in" to an exchange, i.e. not taking account
    of routing.
  description: Count of messages published "in" to an exchange, i.e. not taking account
    of routing.
  metric_type: counter
  title: Exchange message publish in count

counter.exchange.message_stats.publish_out:
  brief: Count of messages published "out" of an exchange, i.e. taking account of
    routing.
  description: Count of messages published "out" of an exchange, i.e. taking account
    of routing.
  metric_type: counter
  title: Exchange message publish out count

counter.node.io_read_bytes:
  brief: Total number of bytes read from disk by the persister.
  description: Total number of bytes read from disk by the persister.
  metric_type: counter
  title: Node I/O read bytes

counter.node.io_read_count:
  brief: Total number of read operations by the persister.
  description: Total number of read operations by the persister.
  metric_type: counter
  title: Node I/O read count

counter.node.mnesia_disk_tx_count:
  brief: Number of Mnesia transactions which have been performed that required writes
    to disk.
  description: Number of Mnesia transactions which have been performed that required
    writes to disk. (e.g. creating a durable queue). Only transactions which originated
    on this node are included.
  metric_type: counter
  title: Node Mnesia disk tx count

counter.node.mnesia_ram_tx_count:
  brief: Number of Mnesia transactions which have been performed that did not require
    writes to disk.
  description: Number of Mnesia transactions which have been performed that did not
    require writes to disk. (e.g. creating a transient queue). Only transactions which
    originated on this node are included.
  metric_type: counter
  title: Node Mnesia RAM tx count

counter.queue.disk_reads:
  brief: Total number of times messages have been read from disk by this queue since
    it started.
  description: Total number of times messages have been read from disk by this queue
    since it started.
  metric_type: counter
  title: Queue disk reads

counter.queue.disk_writes:
  brief: Total number of times messages have been written to disk by this queue since
    it started.
  description: Total number of times messages have been written to disk by this queue
    since it started.
  metric_type: counter
  title: Queue disk writes

counter.queue.message_stats.ack:
  brief: Number of acknowledged messages processed by the queue
  description: Number of acknowledged messages processed by the queue
  metric_type: counter
  title: Queue acknowledged message count

counter.queue.message_stats.deliver:
  brief: Count of messages delivered in acknowledgement mode to consumers.
  description: Count of messages delivered in acknowledgement mode to consumers.
  metric_type: counter
  title: Queue acknowledged delivered message count

counter.queue.message_stats.deliver_get:
  brief: Count of all messages delivered on the queue
  description: Count of all messages delivered on the queue
  metric_type: counter
  title: Queue total delivered message count

counter.queue.message_stats.publish:
  brief: Count of messages published.
  description: Count of messages published.
  metric_type: counter
  title: Queue published message count

gauge.channel.connection_details.peer_port:
  brief: The peer port number of the channel
  description: The peer port number of the channel
  metric_type: gauge
  title: Channel connection peer port

gauge.channel.consumer_count:
  brief: The number of consumers the channel has
  description: The number of consumers the channel has
  metric_type: gauge
  title: Channel consumer count

gauge.channel.global_prefetch_count:
  brief: QoS prefetch limit for the entire channel, 0 if unlimited.
  description: QoS prefetch limit for the entire channel, 0 if unlimited.
  metric_type: gauge
  title: Channel global prefetch count

gauge.channel.message_stats.ack_details.rate:
  brief: How much the channel message ack count has changed per second in the most
    recent sampling interval.
  description: How much the channel message ack count has changed per second in the
    most recent sampling interval.
  metric_type: gauge
  title: Channel message ack count rate

gauge.channel.message_stats.confirm_details.rate:
  brief: How much the channel message confirm count has changed per second in the
    most recent sampling interval.
  description: How much the channel message confirm count has changed per second in
    the most recent sampling interval.
  metric_type: gauge
  title: Channel message confirm count rate

gauge.channel.message_stats.deliver_details.rate:
  brief: How much the channel deliver count has changed per second in the most recent
    sampling interval.
  description: How much the channel deliver count has changed per second in the most
    recent sampling interval.
  metric_type: gauge
  title: Channel message deliver count rate

gauge.channel.message_stats.deliver_get_details.rate:
  brief: How much the channel message count has changed per second in the most recent
    sampling interval.
  description: How much the channel message count has changed per second in the most
    recent sampling interval.
  metric_type: gauge
  title: Channel message deliver get count rate

gauge.channel.message_stats.publish_details.rate:
  brief: How much the channel message publish count has changed per second in the
    most recent sampling interval.
  description: How much the channel message publish count has changed per second in
    the most recent sampling interval.
  metric_type: gauge
  title: Channel message publish count rate

gauge.channel.messages_unacknowledged:
  brief: Number of messages delivered via this channel but not yet acknowledged.
  description: Number of messages delivered via this channel but not yet acknowledged.
  metric_type: gauge
  title: Channel messages unacknowledged count

gauge.channel.messages_uncommitted:
  brief: Number of messages received in an as yet uncommitted transaction.
  description: Number of messages received in an as yet uncommitted transaction.
  metric_type: gauge
  title: Channel messages uncommitted

gauge.channel.messages_unconfirmed:
  brief: Number of published messages not yet confirmed. On channels not in confirm
    mode, this remains 0.
  description: Number of published messages not yet confirmed. On channels not in
    confirm mode, this remains 0.
  metric_type: gauge
  title: Channel messages unconfirmed

gauge.channel.number:
  brief: The number of the channel, which uniquely identifies it within a connection.
  description: The number of the channel, which uniquely identifies it within a connection.
  metric_type: gauge
  title: Channel number

gauge.channel.prefetch_count:
  brief: QoS prefetch limit for new consumers, 0 if unlimited.
  description: QoS prefetch limit for new consumers, 0 if unlimited.
  metric_type: gauge
  title: Channel prefetch count

gauge.connection.channels:
  brief: The current number of channels on the connection
  description: The current number of channels on the connection
  metric_type: gauge
  title: Connection channel count

gauge.connection.connected_at:
  brief: The integer timestamp of the most recent time the connection was established
  description: The integer timestamp of the most recent time the connection was established
  metric_type: gauge
  title: Connection connected-at time

gauge.connection.frame_max:
  brief: Maximum permissible size of a frame (in bytes) to negotiate with clients.
  description: Maximum permissible size of a frame (in bytes) to negotiate with clients.
  metric_type: gauge
  title: Connection frame max size

gauge.connection.peer_port:
  brief: The peer port of the connection
  description: The peer port of the connection
  metric_type: gauge
  title: Connection peer port

gauge.connection.port:
  brief: The port the connection is established on
  description: The port the connection is established on
  metric_type: gauge
  title: Connection port

gauge.connection.recv_oct_details.rate:
  brief: How much the connection's octets received count has changed per second in
    the most recent sampling interval.
  description: How much the connection's octets received count has changed per second
    in the most recent sampling interval.
  metric_type: gauge
  title: Connection octets received rate

gauge.connection.send_oct_details.rate:
  brief: How much the connection's octets sent count has changed per second in the
    most recent sampling interval.
  description: How much the connection's octets sent count has changed per second
    in the most recent sampling interval.
  metric_type: gauge
  title: Connection octets sent rate

gauge.connection.send_pend:
  brief: The number of messages in the send queue of the connection
  description: The number of messages in the send queue of the connection
  metric_type: gauge
  title: Connection send pending count

gauge.connection.timeout:
  brief: The current timeout setting (in seconds) of the connection
  description: The current timeout setting (in seconds) of the connection
  metric_type: gauge
  title: Connection timeout

gauge.exchange.message_stats.confirm_details.rate:
  brief: How much the message confirm count has changed per second in the most recent
    sampling interval.
  description: How much the message confirm count has changed per second in the most
    recent sampling interval.
  metric_type: gauge
  title: Exchange message confirm count rate

gauge.exchange.message_stats.publish_in_details.rate:
  brief: How much the exchange publish-in count has changed per second in the most
    recent sampling interval.
  description: How much the exchange publish-in count has changed per second in the
    most recent sampling interval.
  metric_type: gauge
  title: Exchange message publish in rate

gauge.exchange.message_stats.publish_out_details.rate:
  brief: How much the exchange publish-out count has changed per second in the most
    recent sampling interval.
  description: How much the exchange publish-out count has changed per second in the
    most recent sampling interval.
  metric_type: gauge
  title: Exchange message publish out count rate

gauge.node.disk_free:
  brief: Disk free space (in bytes) on the node
  description: Disk free space (in bytes) on the node
  metric_type: gauge
  title: Node disk free space

gauge.node.disk_free_details.rate:
  brief: How much the disk free space has changed per second in the most recent sampling
    interval.
  description: How much the disk free space has changed per second in the most recent
    sampling interval.
  metric_type: gauge
  title: Node disk free space rate

gauge.node.disk_free_limit:
  brief: Point (in bytes) at which the disk alarm will go off.
  description: Point (in bytes) at which the disk alarm will go off.
  metric_type: gauge
  title: Node disk free limit

gauge.node.fd_total:
  brief: Total number of file descriptors available.
  description: Total number of file descriptors available.
  metric_type: gauge
  title: Node fd total

gauge.node.fd_used:
  brief: Number of used file descriptors.
  description: Number of used file descriptors.
  metric_type: gauge
  title: Node fd used

gauge.node.fd_used_details.rate:
  brief: How much the number of used file descriptors has changed per second in the
    most recent sampling interval.
  description: How much the number of used file descriptors has changed per second
    in the most recent sampling interval.
  metric_type: gauge
  title: Node fd used rate

gauge.node.io_read_avg_time:
  brief: Average wall time (milliseconds) for each disk read operation in the last
    statistics interval.
  description: Average wall time (milliseconds) for each disk read operation in the
    last statistics interval.
  metric_type: gauge
  title: Node I/O read average time

gauge.node.io_read_avg_time_details.rate:
  brief: How much the I/O read average time has changed per second in the most recent
    sampling interval.
  description: How much the I/O read average time has changed per second in the most
    recent sampling interval.
  metric_type: gauge
  title: Node I/O read average time rate

gauge.node.io_read_bytes_details.rate:
  brief: How much the number of bytes read from disk has changed per second in the
    most recent sampling interval.
  description: How much the number of bytes read from disk has changed per second
    in the most recent sampling interval.
  metric_type: gauge
  title: Node I/O read bytes rate

gauge.node.io_read_count_details.rate:
  brief: How much the number of read operations has changed per second in the most
    recent sampling interval.
  description: How much the number of read operations has changed per second in the
    most recent sampling interval.
  metric_type: gauge
  title: Node I/O read count rate

gauge.node.io_sync_avg_time:
  brief: Average wall time (milliseconds) for each fsync() operation in the last statistics
    interval.
  description: Average wall time (milliseconds) for each fsync() operation in the
    last statistics interval.
  metric_type: gauge
  title: Node I/O sync average time

gauge.node.io_sync_avg_time_details.rate:
  brief: How much the average I/O sync time has changed per second in the most recent
    sampling interval.
  description: How much the average I/O sync time has changed per second in the most
    recent sampling interval.
  metric_type: gauge
  title: Node I/O sync average time rate

gauge.node.io_write_avg_time:
  brief: Average wall time (milliseconds) for each disk write operation in the last
    statistics interval.
  description: Average wall time (milliseconds) for each disk write operation in the
    last statistics interval.
  metric_type: gauge
  title: Node I/O write average time

gauge.node.io_write_avg_time_details.rate:
  brief: How much the I/O write time has changed per second in the most recent sampling
    interval.
  description: How much the I/O write time has changed per second in the most recent
    sampling interval.
  metric_type: gauge
  title: Node I/O write average time rate

gauge.node.mem_limit:
  brief: Point (in bytes) at which the memory alarm will go off.
  description: Point (in bytes) at which the memory alarm will go off.
  metric_type: gauge
  title: Node memory limit

gauge.node.mem_used:
  brief: Memory used in bytes.
  description: Memory used in bytes.
  metric_type: gauge
  title: Node memory used

gauge.node.mem_used_details.rate:
  brief: How much the count has changed per second in the most recent sampling interval.
  description: How much the count has changed per second in the most recent sampling
    interval.
  metric_type: gauge
  title: Node memory used rate

gauge.node.mnesia_disk_tx_count_details.rate:
  brief: How much the Mnesia disk transaction count has changed per second in the
    most recent sampling interval.
  description: How much the Mnesia disk transaction count has changed per second in
    the most recent sampling interval.
  metric_type: gauge
  title: Node Mnesia disk tx count rate

gauge.node.mnesia_ram_tx_count_details.rate:
  brief: How much the RAM-only Mnesia transaction count has changed per second in
    the most recent sampling interval.
  description: How much the RAM-only Mnesia transaction count has changed per second
    in the most recent sampling interval.
  metric_type: gauge
  title: Node Mnesia RAM tx count rate

gauge.node.net_ticktime:
  brief: Current kernel net_ticktime setting for the node.
  description: Current kernel net_ticktime setting for the node.
  metric_type: gauge
  title: Node net ticktime

gauge.node.proc_total:
  brief: The maximum number of Erlang processes that can run in an Erlang VM.
  description: The maximum number of Erlang processes that can run in an Erlang VM.
  metric_type: gauge
  title: Node Erlang processes maximum

gauge.node.proc_used:
  brief: Number of Erlang processes currently running in use.
  description: Number of Erlang processes currently running in use.
  metric_type: gauge
  title: Node Erlang processes used

gauge.node.proc_used_details.rate:
  brief: How much the number of erlang processes in use has changed per second in
    the most recent sampling interval.
  description: How much the number of erlang processes in use has changed per second
    in the most recent sampling interval.
  metric_type: gauge
  title: Node processes used rate

gauge.node.processors:
  brief: Number of cores detected and usable by Erlang.
  description: Number of cores detected and usable by Erlang.
  metric_type: gauge
  title: Node processors used

gauge.node.run_queue:
  brief: Average number of Erlang processes waiting to run.
  description: Average number of Erlang processes waiting to run.
  metric_type: gauge
  title: Node run queue size

gauge.node.sockets_total:
  brief: Number of file descriptors available for use as sockets.
  description: Number of file descriptors available for use as sockets.
  metric_type: gauge
  title: Node sockets total

gauge.node.sockets_used:
  brief: Number of file descriptors used as sockets.
  description: Number of file descriptors used as sockets.
  metric_type: gauge
  title: Node sockets used

gauge.node.sockets_used_details.rate:
  brief: How much the number of sockets used has changed per second in the most recent
    sampling interval.
  description: How much the number of sockets used has changed per second in the most
    recent sampling interval.
  metric_type: gauge
  title: Node sockets used rate

gauge.node.uptime:
  brief: Time since the Erlang VM started, in milliseconds.
  description: Time since the Erlang VM started, in milliseconds.
  metric_type: gauge
  title: Node uptime

gauge.queue.backing_queue_status.avg_ack_egress_rate:
  brief: Rate at which unacknowledged message records leave RAM, e.g. because acks
    arrive or unacked messages are paged out
  description: Rate at which unacknowledged message records leave RAM, e.g. because
    acks arrive or unacked messages are paged out
  metric_type: gauge
  title: Backing queue average ack egress rate

gauge.queue.backing_queue_status.avg_ack_ingress_rate:
  brief: Rate at which unacknowledged message records enter RAM, e.g. because messages
    are delivered requiring acknowledgement
  description: Rate at which unacknowledged message records enter RAM, e.g. because
    messages are delivered requiring acknowledgement
  metric_type: gauge
  title: Backing queue average ack ingress rate

gauge.queue.backing_queue_status.avg_egress_rate:
  brief: Average egress (outbound) rate, not including messages that are sent straight
    through to auto-acking consumers.
  description: Average egress (outbound) rate, not including messages that are sent
    straight through to auto-acking consumers.
  metric_type: gauge
  title: Backing queue average egress rate

gauge.queue.backing_queue_status.avg_ingress_rate:
  brief: Average ingress (inbound) rate, not including messages that are sent straight
    through to auto-acking consumers.
  description: Average ingress (inbound) rate, not including messages that are sent
    straight through to auto-acking consumers.
  metric_type: gauge
  title: Backing queue average ingress rate

gauge.queue.backing_queue_status.len:
  brief: Total backing queue length, in messages
  description: Total backing queue length, in messages
  metric_type: gauge
  title: Backing queue length

gauge.queue.backing_queue_status.next_seq_id:
  brief: The next sequence ID to be used in the backing queue
  description: The next sequence ID to be used in the backing queue
  metric_type: gauge
  title: Backing queue next sequence id

gauge.queue.backing_queue_status.q1:
  brief: Number of messages in backing queue q1
  description: Number of messages in backing queue q1
  metric_type: gauge
  title: Backing queue information- q1

gauge.queue.backing_queue_status.q2:
  brief: Number of messages in backing queue q2
  description: Number of messages in backing queue q2
  metric_type: gauge
  title: Backing queue information- q2

gauge.queue.backing_queue_status.q3:
  brief: Number of messages in backing queue q3
  description: Number of messages in backing queue q3
  metric_type: gauge
  title: Backing queue information- q3

gauge.queue.backing_queue_status.q4:
  brief: Number of messages in backing queue q4
  description: Number of messages in backing queue q4
  metric_type: gauge
  title: Backing queue information- q4

gauge.queue.consumer_utilisation:
  brief: Fraction of the time (between 0.0 and 1.0) that the queue is able to immediately
    deliver messages to consumers.
  description: Fraction of the time (between 0.0 and 1.0) that the queue is able to
    immediately deliver messages to consumers. This can be less than 1.0 if consumers
    are limited by network congestion or prefetch count.
  metric_type: gauge
  title: Queue consumer utilisation

gauge.queue.consumers:
  brief: Number of consumers of the queue
  description: Number of consumers of the queue
  metric_type: gauge
  title: Queue consumers

gauge.queue.memory:
  brief: Bytes of memory consumed by the Erlang process associated with the queue,
    including stack, heap and internal structures.
  description: Bytes of memory consumed by the Erlang process associated with the
    queue, including stack, heap and internal structures.
  metric_type: gauge
  title: Queue memory usage

gauge.queue.message_bytes:
  brief: Sum of the size of all message bodies in the queue. This does not include
    the message properties (including headers) or any overhead.
  description: Sum of the size of all message bodies in the queue. This does not include
    the message properties (including headers) or any overhead.
  metric_type: gauge
  title: Queue message bytes sum

gauge.queue.message_bytes_persistent:
  brief: Total number of persistent messages in the queue (will always be 0 for transient
    queues).
  description: Total number of persistent messages in the queue (will always be 0
    for transient queues).
  metric_type: gauge
  title: Queue persistent message bytes

gauge.queue.message_bytes_ram:
  brief: Like message_bytes but counting only those messages which are in RAM.
  description: Like message_bytes but counting only those messages which are in RAM.
  metric_type: gauge
  title: Queue RAM message bytes

gauge.queue.message_bytes_ready:
  brief: Like message_bytes but counting only those messages ready to be delivered
    to clients.
  description: Like message_bytes but counting only those messages ready to be delivered
    to clients.
  metric_type: gauge
  title: Queue ready message bytes

gauge.queue.message_bytes_unacknowledged:
  brief: Like message_bytes but counting only those messages delivered to clients
    but not yet acknowledged.
  description: Like message_bytes but counting only those messages delivered to clients
    but not yet acknowledged.
  metric_type: gauge
  title: Queue unacknowledged message bytes

gauge.queue.message_stats.ack_details.rate:
  brief: How much the number of acknowledged messages has changed per second in the
    most recent sampling interval.
  description: How much the number of acknowledged messages has changed per second
    in the most recent sampling interval.
  metric_type: gauge
  title: Queue acknowledged message rate

gauge.queue.message_stats.deliver_details.rate:
  brief: How much the count of messages delivered has changed per second in the most
    recent sampling interval.
  description: How much the count of messages delivered has changed per second in
    the most recent sampling interval.
  metric_type: gauge
  title: Queue delivered message rate

gauge.queue.message_stats.deliver_get_details.rate:
  brief: How much the count of all messages delivered has changed per second in the
    most recent sampling interval.
  description: How much the count of all messages delivered has changed per second
    in the most recent sampling interval.
  metric_type: gauge
  title: Queue total delivered message rate

gauge.queue.message_stats.publish_details.rate:
  brief: How much the count of messages published has changed per second in the most
    recent sampling interval.
  description: How much the count of messages published has changed per second in
    the most recent sampling interval.
  metric_type: gauge
  title: Queue published message rate

gauge.queue.messages:
  brief: Sum of ready and unacknowledged messages (queue depth).
  description: Sum of ready and unacknowledged messages (queue depth).
  metric_type: gauge
  title: Queue depth

gauge.queue.messages_details.rate:
  brief: How much the queue depth has changed per second in the most recent sampling
    interval.
  description: How much the queue depth has changed per second in the most recent
    sampling interval.
  metric_type: gauge
  title: Queue depth rate

gauge.queue.messages_persistent:
  brief: Total number of persistent messages in the queue (will always be 0 for transient
    queues).
  description: Total number of persistent messages in the queue (will always be 0
    for transient queues).
  metric_type: gauge
  title: Queue persistent message count

gauge.queue.messages_ram:
  brief: Total number of messages which are resident in RAM.
  description: Total number of messages which are resident in RAM.
  metric_type: gauge
  title: Queue RAM messages

gauge.queue.messages_ready:
  brief: Number of messages ready to be delivered to clients.
  description: Number of messages ready to be delivered to clients.
  metric_type: gauge
  title: Queue ready messages

gauge.queue.messages_ready_details.rate:
  brief: How much the count of messages ready has changed per second in the most recent
    sampling interval.
  description: How much the count of messages ready has changed per second in the
    most recent sampling interval.
  metric_type: gauge
  title: Queue ready messages rate

gauge.queue.messages_ready_ram:
  brief: Number of messages from messages_ready which are resident in RAM.
  description: Number of messages from messages_ready which are resident in RAM.
  metric_type: gauge
  title: Queue ready RAM messages

gauge.queue.messages_unacknowledged:
  brief: Number of messages delivered to clients but not yet acknowledged.
  description: Number of messages delivered to clients but not yet acknowledged.
  metric_type: gauge
  title: Queue unacknowledged messages

gauge.queue.messages_unacknowledged_details.rate:
  brief: How much the count of unacknowledged messages has changed per second in the
    most recent sampling interval.
  description: How much the count of unacknowledged messages has changed per second
    in the most recent sampling interval.
  metric_type: gauge
  title: Queue unacknowledged messages rate

gauge.queue.messages_unacknowledged_ram:
  brief: Number of messages from messages_unacknowledged which are resident in RAM.
  description: Number of messages from messages_unacknowledged which are resident
    in RAM.
  metric_type: gauge
  title: Queue unacknowleged RAM messages

