# This file was generated in the Smart Agent repo and copied here, DO NOT EDIT HERE.
counter.channel.message_stats.ack:
  brief: The number of acknowledged messages
  custom: true
  description: The number of acknowledged messages
  metric_type: counter
  title: counter.channel.message_stats.ack

counter.channel.message_stats.confirm:
  brief: Count of messages confirmed
  custom: true
  description: Count of messages confirmed.
  metric_type: counter
  title: counter.channel.message_stats.confirm

counter.channel.message_stats.deliver:
  brief: Count of messages delivered in acknowledgement mode to consumers
  custom: true
  description: Count of messages delivered in acknowledgement mode to consumers.
  metric_type: counter
  title: counter.channel.message_stats.deliver

counter.channel.message_stats.deliver_get:
  brief: Count of all messages delivered on the channel
  custom: true
  description: Count of all messages delivered on the channel
  metric_type: counter
  title: counter.channel.message_stats.deliver_get

counter.channel.message_stats.publish:
  brief: Count of messages published
  custom: true
  description: Count of messages published.
  metric_type: counter
  title: counter.channel.message_stats.publish

counter.connection.channel_max:
  brief: The maximum number of channels on the connection
  custom: true
  description: The maximum number of channels on the connection
  metric_type: counter
  title: counter.connection.channel_max

counter.connection.recv_cnt:
  brief: Number of packets received on the connection
  custom: true
  description: Number of packets received on the connection
  metric_type: counter
  title: counter.connection.recv_cnt

counter.connection.recv_oct:
  brief: Number of octets received on the connection
  custom: true
  description: Number of octets received on the connection
  metric_type: counter
  title: counter.connection.recv_oct

counter.connection.send_cnt:
  brief: Number of packets sent by the connection
  custom: true
  description: Number of packets sent by the connection
  metric_type: counter
  title: counter.connection.send_cnt

counter.connection.send_oct:
  brief: Number of octets sent by the connection
  custom: true
  description: Number of octets sent by the connection
  metric_type: counter
  title: counter.connection.send_oct

counter.exchange.message_stats.confirm:
  brief: Count of messages confirmed
  custom: true
  description: Count of messages confirmed.
  metric_type: counter
  title: counter.exchange.message_stats.confirm

counter.exchange.message_stats.publish_in:
  brief: Count of messages published "in" to an exchange, i.e
  custom: false
  description: Count of messages published "in" to an exchange, i.e. not taking account
    of routing.
  metric_type: counter
  title: counter.exchange.message_stats.publish_in

counter.exchange.message_stats.publish_out:
  brief: Count of messages published "out" of an exchange, i.e
  custom: true
  description: Count of messages published "out" of an exchange, i.e. taking account
    of routing.
  metric_type: counter
  title: counter.exchange.message_stats.publish_out

counter.node.io_read_bytes:
  brief: Total number of bytes read from disk by the persister
  custom: true
  description: Total number of bytes read from disk by the persister.
  metric_type: counter
  title: counter.node.io_read_bytes

counter.node.io_read_count:
  brief: Total number of read operations by the persister
  custom: true
  description: Total number of read operations by the persister.
  metric_type: counter
  title: counter.node.io_read_count

counter.node.mnesia_disk_tx_count:
  brief: Number of Mnesia transactions which have been performed that required writes
    to disk
  custom: true
  description: Number of Mnesia transactions which have been performed that required
    writes to disk.
  metric_type: counter
  title: counter.node.mnesia_disk_tx_count

counter.node.mnesia_ram_tx_count:
  brief: Number of Mnesia transactions which have been performed that did not require
    writes to disk
  custom: true
  description: Number of Mnesia transactions which have been performed that did not
    require writes to disk.
  metric_type: counter
  title: counter.node.mnesia_ram_tx_count

counter.queue.disk_reads:
  brief: Total number of times messages have been read from disk by this queue since
    it started
  custom: true
  description: Total number of times messages have been read from disk by this queue
    since it started.
  metric_type: counter
  title: counter.queue.disk_reads

counter.queue.disk_writes:
  brief: Total number of times messages have been written to disk by this queue since
    it started
  custom: true
  description: Total number of times messages have been written to disk by this queue
    since it started.
  metric_type: counter
  title: counter.queue.disk_writes

counter.queue.message_stats.ack:
  brief: Number of acknowledged messages processed by the queue
  custom: true
  description: Number of acknowledged messages processed by the queue
  metric_type: counter
  title: counter.queue.message_stats.ack

counter.queue.message_stats.deliver:
  brief: Count of messages delivered in acknowledgement mode to consumers
  custom: false
  description: Count of messages delivered in acknowledgement mode to consumers.
  metric_type: counter
  title: counter.queue.message_stats.deliver

counter.queue.message_stats.deliver_get:
  brief: Count of all messages delivered on the queue
  custom: true
  description: Count of all messages delivered on the queue
  metric_type: counter
  title: counter.queue.message_stats.deliver_get

counter.queue.message_stats.publish:
  brief: Count of messages published
  custom: true
  description: Count of messages published.
  metric_type: counter
  title: counter.queue.message_stats.publish

gauge.channel.connection_details.peer_port:
  brief: The peer port number of the channel
  custom: true
  description: The peer port number of the channel
  metric_type: gauge
  title: gauge.channel.connection_details.peer_port

gauge.channel.consumer_count:
  brief: The number of consumers the channel has
  custom: true
  description: The number of consumers the channel has
  metric_type: gauge
  title: gauge.channel.consumer_count

gauge.channel.global_prefetch_count:
  brief: QoS prefetch limit for the entire channel, 0 if unlimited
  custom: true
  description: QoS prefetch limit for the entire channel, 0 if unlimited.
  metric_type: gauge
  title: gauge.channel.global_prefetch_count

gauge.channel.message_stats.ack_details.rate:
  brief: How much the channel message ack count has changed per second in the most
    recent sampling interval
  custom: true
  description: How much the channel message ack count has changed per second in the
    most recent sampling interval.
  metric_type: gauge
  title: gauge.channel.message_stats.ack_details.rate

gauge.channel.message_stats.confirm_details.rate:
  brief: How much the channel message confirm count has changed per second in the
    most recent sampling interval
  custom: true
  description: How much the channel message confirm count has changed per second in
    the most recent sampling interval.
  metric_type: gauge
  title: gauge.channel.message_stats.confirm_details.rate

gauge.channel.message_stats.deliver_details.rate:
  brief: How much the channel deliver count has changed per second in the most recent
    sampling interval
  custom: true
  description: How much the channel deliver count has changed per second in the most
    recent sampling interval.
  metric_type: gauge
  title: gauge.channel.message_stats.deliver_details.rate

gauge.channel.message_stats.deliver_get_details.rate:
  brief: How much the channel message count has changed per second in the most recent
    sampling interval
  custom: true
  description: How much the channel message count has changed per second in the most
    recent sampling interval.
  metric_type: gauge
  title: gauge.channel.message_stats.deliver_get_details.rate

gauge.channel.message_stats.publish_details.rate:
  brief: How much the channel message publish count has changed per second in the
    most recent sampling interval
  custom: true
  description: How much the channel message publish count has changed per second in
    the most recent sampling interval.
  metric_type: gauge
  title: gauge.channel.message_stats.publish_details.rate

gauge.channel.messages_unacknowledged:
  brief: Number of messages delivered via this channel but not yet acknowledged
  custom: true
  description: Number of messages delivered via this channel but not yet acknowledged.
  metric_type: gauge
  title: gauge.channel.messages_unacknowledged

gauge.channel.messages_uncommitted:
  brief: Number of messages received in an as yet uncommitted transaction
  custom: true
  description: Number of messages received in an as yet uncommitted transaction.
  metric_type: gauge
  title: gauge.channel.messages_uncommitted

gauge.channel.messages_unconfirmed:
  brief: Number of published messages not yet confirmed
  custom: true
  description: Number of published messages not yet confirmed. On channels not in
    confirm mode, this remains 0.
  metric_type: gauge
  title: gauge.channel.messages_unconfirmed

gauge.channel.number:
  brief: The number of the channel, which uniquely identifies it within a connection
  custom: false
  description: The number of the channel, which uniquely identifies it within a connection.
  metric_type: gauge
  title: gauge.channel.number

gauge.channel.prefetch_count:
  brief: QoS prefetch limit for new consumers, 0 if unlimited
  custom: true
  description: QoS prefetch limit for new consumers, 0 if unlimited.
  metric_type: gauge
  title: gauge.channel.prefetch_count

gauge.connection.channels:
  brief: The current number of channels on the connection
  custom: true
  description: The current number of channels on the connection
  metric_type: gauge
  title: gauge.connection.channels

gauge.connection.connected_at:
  brief: The integer timestamp of the most recent time the connection was established
  custom: true
  description: The integer timestamp of the most recent time the connection was established
  metric_type: gauge
  title: gauge.connection.connected_at

gauge.connection.frame_max:
  brief: Maximum permissible size of a frame (in bytes) to negotiate with clients
  custom: true
  description: Maximum permissible size of a frame (in bytes) to negotiate with clients.
  metric_type: gauge
  title: gauge.connection.frame_max

gauge.connection.peer_port:
  brief: The peer port of the connection
  custom: true
  description: The peer port of the connection
  metric_type: gauge
  title: gauge.connection.peer_port

gauge.connection.port:
  brief: The port the connection is established on
  custom: true
  description: The port the connection is established on
  metric_type: gauge
  title: gauge.connection.port

gauge.connection.recv_oct_details.rate:
  brief: How much the connection's octets received count has changed per second in
    the most recent sampling interval
  custom: true
  description: How much the connection's octets received count has changed per second
    in the most recent sampling interval.
  metric_type: gauge
  title: gauge.connection.recv_oct_details.rate

gauge.connection.send_oct_details.rate:
  brief: How much the connection's octets sent count has changed per second in the
    most recent sampling interval
  custom: true
  description: How much the connection's octets sent count has changed per second
    in the most recent sampling interval.
  metric_type: gauge
  title: gauge.connection.send_oct_details.rate

gauge.connection.send_pend:
  brief: The number of messages in the send queue of the connection
  custom: true
  description: The number of messages in the send queue of the connection
  metric_type: gauge
  title: gauge.connection.send_pend

gauge.connection.timeout:
  brief: The current timeout setting (in seconds) of the connection
  custom: true
  description: The current timeout setting (in seconds) of the connection
  metric_type: gauge
  title: gauge.connection.timeout

gauge.exchange.message_stats.confirm_details.rate:
  brief: How much the message confirm count has changed per second in the most recent
    sampling interval
  custom: true
  description: How much the message confirm count has changed per second in the most
    recent sampling interval.
  metric_type: gauge
  title: gauge.exchange.message_stats.confirm_details.rate

gauge.exchange.message_stats.publish_in_details.rate:
  brief: How much the exchange publish-in count has changed per second in the most
    recent sampling interval
  custom: true
  description: How much the exchange publish-in count has changed per second in the
    most recent sampling interval.
  metric_type: gauge
  title: gauge.exchange.message_stats.publish_in_details.rate

gauge.exchange.message_stats.publish_out_details.rate:
  brief: How much the exchange publish-out count has changed per second in the most
    recent sampling interval
  custom: true
  description: How much the exchange publish-out count has changed per second in the
    most recent sampling interval.
  metric_type: gauge
  title: gauge.exchange.message_stats.publish_out_details.rate

gauge.node.disk_free:
  brief: Disk free space (in bytes) on the node
  custom: false
  description: Disk free space (in bytes) on the node
  metric_type: gauge
  title: gauge.node.disk_free

gauge.node.disk_free_details.rate:
  brief: How much the disk free space has changed per second in the most recent sampling
    interval
  custom: true
  description: How much the disk free space has changed per second in the most recent
    sampling interval.
  metric_type: gauge
  title: gauge.node.disk_free_details.rate

gauge.node.disk_free_limit:
  brief: Point (in bytes) at which the disk alarm will go off
  custom: false
  description: Point (in bytes) at which the disk alarm will go off.
  metric_type: gauge
  title: gauge.node.disk_free_limit

gauge.node.fd_total:
  brief: Total number of file descriptors available
  custom: false
  description: Total number of file descriptors available.
  metric_type: gauge
  title: gauge.node.fd_total

gauge.node.fd_used:
  brief: Number of used file descriptors
  custom: false
  description: Number of used file descriptors.
  metric_type: gauge
  title: gauge.node.fd_used

gauge.node.fd_used_details.rate:
  brief: How much the number of used file descriptors has changed per second in the
    most recent sampling interval
  custom: true
  description: How much the number of used file descriptors has changed per second
    in the most recent sampling interval.
  metric_type: gauge
  title: gauge.node.fd_used_details.rate

gauge.node.io_read_avg_time:
  brief: Average wall time (milliseconds) for each disk read operation in the last
    statistics interval
  custom: false
  description: Average wall time (milliseconds) for each disk read operation in the
    last statistics interval.
  metric_type: gauge
  title: gauge.node.io_read_avg_time

gauge.node.io_read_avg_time_details.rate:
  brief: How much the I/O read average time has changed per second in the most recent
    sampling interval
  custom: true
  description: How much the I/O read average time has changed per second in the most
    recent sampling interval.
  metric_type: gauge
  title: gauge.node.io_read_avg_time_details.rate

gauge.node.io_read_bytes_details.rate:
  brief: How much the number of bytes read from disk has changed per second in the
    most recent sampling interval
  custom: true
  description: How much the number of bytes read from disk has changed per second
    in the most recent sampling interval.
  metric_type: gauge
  title: gauge.node.io_read_bytes_details.rate

gauge.node.io_read_count_details.rate:
  brief: How much the number of read operations has changed per second in the most
    recent sampling interval
  custom: true
  description: How much the number of read operations has changed per second in the
    most recent sampling interval.
  metric_type: gauge
  title: gauge.node.io_read_count_details.rate

gauge.node.io_sync_avg_time:
  brief: Average wall time (milliseconds) for each fsync() operation in the last statistics
    interval
  custom: false
  description: Average wall time (milliseconds) for each fsync() operation in the
    last statistics interval.
  metric_type: gauge
  title: gauge.node.io_sync_avg_time

gauge.node.io_sync_avg_time_details.rate:
  brief: How much the average I/O sync time has changed per second in the most recent
    sampling interval
  custom: true
  description: How much the average I/O sync time has changed per second in the most
    recent sampling interval.
  metric_type: gauge
  title: gauge.node.io_sync_avg_time_details.rate

gauge.node.io_write_avg_time:
  brief: Average wall time (milliseconds) for each disk write operation in the last
    statistics interval
  custom: false
  description: Average wall time (milliseconds) for each disk write operation in the
    last statistics interval.
  metric_type: gauge
  title: gauge.node.io_write_avg_time

gauge.node.io_write_avg_time_details.rate:
  brief: How much the I/O write time has changed per second in the most recent sampling
    interval
  custom: true
  description: How much the I/O write time has changed per second in the most recent
    sampling interval.
  metric_type: gauge
  title: gauge.node.io_write_avg_time_details.rate

gauge.node.mem_limit:
  brief: Point (in bytes) at which the memory alarm will go off
  custom: false
  description: Point (in bytes) at which the memory alarm will go off.
  metric_type: gauge
  title: gauge.node.mem_limit

gauge.node.mem_used:
  brief: Memory used in bytes
  custom: false
  description: Memory used in bytes.
  metric_type: gauge
  title: gauge.node.mem_used

gauge.node.mem_used_details.rate:
  brief: How much the count has changed per second in the most recent sampling interval
  custom: true
  description: How much the count has changed per second in the most recent sampling
    interval.
  metric_type: gauge
  title: gauge.node.mem_used_details.rate

gauge.node.mnesia_disk_tx_count_details.rate:
  brief: How much the Mnesia disk transaction count has changed per second in the
    most recent sampling interval
  custom: true
  description: How much the Mnesia disk transaction count has changed per second in
    the most recent sampling interval.
  metric_type: gauge
  title: gauge.node.mnesia_disk_tx_count_details.rate

gauge.node.mnesia_ram_tx_count_details.rate:
  brief: How much the RAM-only Mnesia transaction count has changed per second in
    the most recent sampling interval
  custom: true
  description: How much the RAM-only Mnesia transaction count has changed per second
    in the most recent sampling interval.
  metric_type: gauge
  title: gauge.node.mnesia_ram_tx_count_details.rate

gauge.node.net_ticktime:
  brief: Current kernel net_ticktime setting for the node
  custom: true
  description: Current kernel net_ticktime setting for the node.
  metric_type: gauge
  title: gauge.node.net_ticktime

gauge.node.proc_total:
  brief: The maximum number of Erlang processes that can run in an Erlang VM
  custom: true
  description: The maximum number of Erlang processes that can run in an Erlang VM.
  metric_type: gauge
  title: gauge.node.proc_total

gauge.node.proc_used:
  brief: Number of Erlang processes currently running in use
  custom: true
  description: Number of Erlang processes currently running in use.
  metric_type: gauge
  title: gauge.node.proc_used

gauge.node.proc_used_details.rate:
  brief: How much the number of erlang processes in use has changed per second in
    the most recent sampling interval
  custom: true
  description: How much the number of erlang processes in use has changed per second
    in the most recent sampling interval.
  metric_type: gauge
  title: gauge.node.proc_used_details.rate

gauge.node.processors:
  brief: Number of cores detected and usable by Erlang
  custom: true
  description: Number of cores detected and usable by Erlang.
  metric_type: gauge
  title: gauge.node.processors

gauge.node.run_queue:
  brief: Average number of Erlang processes waiting to run
  custom: true
  description: Average number of Erlang processes waiting to run.
  metric_type: gauge
  title: gauge.node.run_queue

gauge.node.sockets_total:
  brief: Number of file descriptors available for use as sockets
  custom: true
  description: Number of file descriptors available for use as sockets.
  metric_type: gauge
  title: gauge.node.sockets_total

gauge.node.sockets_used:
  brief: Number of file descriptors used as sockets
  custom: true
  description: Number of file descriptors used as sockets.
  metric_type: gauge
  title: gauge.node.sockets_used

gauge.node.sockets_used_details.rate:
  brief: How much the number of sockets used has changed per second in the most recent
    sampling interval
  custom: true
  description: How much the number of sockets used has changed per second in the most
    recent sampling interval.
  metric_type: gauge
  title: gauge.node.sockets_used_details.rate

gauge.node.uptime:
  brief: Time since the Erlang VM started, in milliseconds
  custom: false
  description: Time since the Erlang VM started, in milliseconds.
  metric_type: gauge
  title: gauge.node.uptime

gauge.queue.backing_queue_status.avg_ack_egress_rate:
  brief: Rate at which unacknowledged message records leave RAM, e.g
  custom: true
  description: Rate at which unacknowledged message records leave RAM, e.g. because
    acks arrive or unacked messages are paged out
  metric_type: gauge
  title: gauge.queue.backing_queue_status.avg_ack_egress_rate

gauge.queue.backing_queue_status.avg_ack_ingress_rate:
  brief: Rate at which unacknowledged message records enter RAM, e.g
  custom: true
  description: Rate at which unacknowledged message records enter RAM, e.g. because
    messages are delivered requiring acknowledgement
  metric_type: gauge
  title: gauge.queue.backing_queue_status.avg_ack_ingress_rate

gauge.queue.backing_queue_status.avg_egress_rate:
  brief: Average egress (outbound) rate, not including messages that are sent straight
    through to auto-acking consumers
  custom: true
  description: Average egress (outbound) rate, not including messages that are sent
    straight through to auto-acking consumers.
  metric_type: gauge
  title: gauge.queue.backing_queue_status.avg_egress_rate

gauge.queue.backing_queue_status.avg_ingress_rate:
  brief: Average ingress (inbound) rate, not including messages that are sent straight
    through to auto-acking consumers
  custom: true
  description: Average ingress (inbound) rate, not including messages that are sent
    straight through to auto-acking consumers.
  metric_type: gauge
  title: gauge.queue.backing_queue_status.avg_ingress_rate

gauge.queue.backing_queue_status.len:
  brief: Total backing queue length, in messages
  custom: true
  description: Total backing queue length, in messages
  metric_type: gauge
  title: gauge.queue.backing_queue_status.len

gauge.queue.backing_queue_status.next_seq_id:
  brief: The next sequence ID to be used in the backing queue
  custom: true
  description: The next sequence ID to be used in the backing queue
  metric_type: gauge
  title: gauge.queue.backing_queue_status.next_seq_id

gauge.queue.backing_queue_status.q1:
  brief: Number of messages in backing queue q1
  custom: true
  description: Number of messages in backing queue q1
  metric_type: gauge
  title: gauge.queue.backing_queue_status.q1

gauge.queue.backing_queue_status.q2:
  brief: Number of messages in backing queue q2
  custom: true
  description: Number of messages in backing queue q2
  metric_type: gauge
  title: gauge.queue.backing_queue_status.q2

gauge.queue.backing_queue_status.q3:
  brief: Number of messages in backing queue q3
  custom: true
  description: Number of messages in backing queue q3
  metric_type: gauge
  title: gauge.queue.backing_queue_status.q3

gauge.queue.backing_queue_status.q4:
  brief: Number of messages in backing queue q4
  custom: true
  description: Number of messages in backing queue q4
  metric_type: gauge
  title: gauge.queue.backing_queue_status.q4

gauge.queue.consumer_utilisation:
  brief: Fraction of the time (between 0.0 and 1.0) that the queue is able to immediately
    deliver messages to consumers
  custom: true
  description: Fraction of the time (between 0.0 and 1.0) that the queue is able to
    immediately deliver messages to consumers.
  metric_type: gauge
  title: gauge.queue.consumer_utilisation

gauge.queue.consumers:
  brief: Number of consumers of the queue
  custom: false
  description: Number of consumers of the queue
  metric_type: gauge
  title: gauge.queue.consumers

gauge.queue.memory:
  brief: Bytes of memory consumed by the Erlang process associated with the queue,
    including stack, heap and internal structures
  custom: false
  description: Bytes of memory consumed by the Erlang process associated with the
    queue, including stack, heap and internal structures.
  metric_type: gauge
  title: gauge.queue.memory

gauge.queue.message_bytes:
  brief: Sum of the size of all message bodies in the queue
  custom: true
  description: Sum of the size of all message bodies in the queue. This does not include
    the message properties (including headers) or any overhead.
  metric_type: gauge
  title: gauge.queue.message_bytes

gauge.queue.message_bytes_persistent:
  brief: Total number of persistent messages in the queue (will always be 0 for transient
    queues)
  custom: true
  description: Total number of persistent messages in the queue (will always be 0
    for transient queues).
  metric_type: gauge
  title: gauge.queue.message_bytes_persistent

gauge.queue.message_bytes_ram:
  brief: Like message_bytes but counting only those messages which are in RAM
  custom: true
  description: Like message_bytes but counting only those messages which are in RAM.
  metric_type: gauge
  title: gauge.queue.message_bytes_ram

gauge.queue.message_bytes_ready:
  brief: Like message_bytes but counting only those messages ready to be delivered
    to clients
  custom: true
  description: Like message_bytes but counting only those messages ready to be delivered
    to clients.
  metric_type: gauge
  title: gauge.queue.message_bytes_ready

gauge.queue.message_bytes_unacknowledged:
  brief: Like message_bytes but counting only those messages delivered to clients
    but not yet acknowledged
  custom: true
  description: Like message_bytes but counting only those messages delivered to clients
    but not yet acknowledged.
  metric_type: gauge
  title: gauge.queue.message_bytes_unacknowledged

gauge.queue.message_stats.ack_details.rate:
  brief: How much the number of acknowledged messages has changed per second in the
    most recent sampling interval
  custom: true
  description: How much the number of acknowledged messages has changed per second
    in the most recent sampling interval.
  metric_type: gauge
  title: gauge.queue.message_stats.ack_details.rate

gauge.queue.message_stats.deliver_details.rate:
  brief: How much the count of messages delivered has changed per second in the most
    recent sampling interval
  custom: true
  description: How much the count of messages delivered has changed per second in
    the most recent sampling interval.
  metric_type: gauge
  title: gauge.queue.message_stats.deliver_details.rate

gauge.queue.message_stats.deliver_get_details.rate:
  brief: How much the count of all messages delivered has changed per second in the
    most recent sampling interval
  custom: true
  description: How much the count of all messages delivered has changed per second
    in the most recent sampling interval.
  metric_type: gauge
  title: gauge.queue.message_stats.deliver_get_details.rate

gauge.queue.message_stats.publish_details.rate:
  brief: How much the count of messages published has changed per second in the most
    recent sampling interval
  custom: true
  description: How much the count of messages published has changed per second in
    the most recent sampling interval.
  metric_type: gauge
  title: gauge.queue.message_stats.publish_details.rate

gauge.queue.messages:
  brief: Sum of ready and unacknowledged messages (queue depth)
  custom: true
  description: Sum of ready and unacknowledged messages (queue depth).
  metric_type: gauge
  title: gauge.queue.messages

gauge.queue.messages_details.rate:
  brief: How much the queue depth has changed per second in the most recent sampling
    interval
  custom: true
  description: How much the queue depth has changed per second in the most recent
    sampling interval.
  metric_type: gauge
  title: gauge.queue.messages_details.rate

gauge.queue.messages_persistent:
  brief: Total number of persistent messages in the queue (will always be 0 for transient
    queues)
  custom: true
  description: Total number of persistent messages in the queue (will always be 0
    for transient queues).
  metric_type: gauge
  title: gauge.queue.messages_persistent

gauge.queue.messages_ram:
  brief: Total number of messages which are resident in RAM
  custom: true
  description: Total number of messages which are resident in RAM.
  metric_type: gauge
  title: gauge.queue.messages_ram

gauge.queue.messages_ready:
  brief: Number of messages ready to be delivered to clients
  custom: false
  description: Number of messages ready to be delivered to clients.
  metric_type: gauge
  title: gauge.queue.messages_ready

gauge.queue.messages_ready_details.rate:
  brief: How much the count of messages ready has changed per second in the most recent
    sampling interval
  custom: true
  description: How much the count of messages ready has changed per second in the
    most recent sampling interval.
  metric_type: gauge
  title: gauge.queue.messages_ready_details.rate

gauge.queue.messages_ready_ram:
  brief: Number of messages from messages_ready which are resident in RAM
  custom: true
  description: Number of messages from messages_ready which are resident in RAM.
  metric_type: gauge
  title: gauge.queue.messages_ready_ram

gauge.queue.messages_unacknowledged:
  brief: Number of messages delivered to clients but not yet acknowledged
  custom: true
  description: Number of messages delivered to clients but not yet acknowledged.
  metric_type: gauge
  title: gauge.queue.messages_unacknowledged

gauge.queue.messages_unacknowledged_details.rate:
  brief: How much the count of unacknowledged messages has changed per second in the
    most recent sampling interval
  custom: true
  description: How much the count of unacknowledged messages has changed per second
    in the most recent sampling interval.
  metric_type: gauge
  title: gauge.queue.messages_unacknowledged_details.rate

gauge.queue.messages_unacknowledged_ram:
  brief: Number of messages from messages_unacknowledged which are resident in RAM
  custom: true
  description: Number of messages from messages_unacknowledged which are resident
    in RAM.
  metric_type: gauge
  title: gauge.queue.messages_unacknowledged_ram

